repository_id,repository_owner,repository_name,repository_language,repository_creation_date,repository_update_date,pull_request_id,pull_request_title,pull_request_body,pull_request_state,pull_request_locked,pull_request_creation_date,pull_request_update_date,pull_request_close_date,pull_request_merged,pull_request_mergeable,pull_request_comments,pull_request_reviews,pull_request_review_comments,pull_request_commits,pull_request_additions,pull_request_deletions,pull_request_changed_files,petebacondarwin_commented,petebacondarwin_commented_str,petebacondarwin_approved,petebacondarwin_approved_str,petebacondarwin_changes_requested,petebacondarwin_changes_requested_str,petebacondarwin_dismissed,petebacondarwin_dismissed_str,Narretz_commented,Narretz_commented_str,Narretz_approved,Narretz_approved_str,Narretz_changes_requested,Narretz_changes_requested_str,Narretz_dismissed,Narretz_dismissed_str,gkalpak_commented,gkalpak_commented_str,gkalpak_approved,gkalpak_approved_str,gkalpak_changes_requested,gkalpak_changes_requested_str,gkalpak_dismissed,gkalpak_dismissed_str,rjamet_commented,rjamet_commented_str,rjamet_approved,rjamet_approved_str,rjamet_changes_requested,rjamet_changes_requested_str,rjamet_dismissed,rjamet_dismissed_str,mprobst_commented,mprobst_commented_str,mprobst_approved,mprobst_approved_str,mprobst_changes_requested,mprobst_changes_requested_str,mprobst_dismissed,mprobst_dismissed_str,adob_commented,adob_commented_str,adob_approved,adob_approved_str,adob_changes_requested,adob_changes_requested_str,adob_dismissed,adob_dismissed_str,3noch_commented,3noch_commented_str,3noch_approved,3noch_approved_str,3noch_changes_requested,3noch_changes_requested_str,3noch_dismissed,3noch_dismissed_str,mgol_commented,mgol_commented_str,mgol_approved,mgol_approved_str,mgol_changes_requested,mgol_changes_requested_str,mgol_dismissed,mgol_dismissed_str,BobChao87_commented,BobChao87_commented_str,BobChao87_approved,BobChao87_approved_str,BobChao87_changes_requested,BobChao87_changes_requested_str,BobChao87_dismissed,BobChao87_dismissed_str,dcherman_commented,dcherman_commented_str,dcherman_approved,dcherman_approved_str,dcherman_changes_requested,dcherman_changes_requested_str,dcherman_dismissed,dcherman_dismissed_str,drpicox_commented,drpicox_commented_str,drpicox_approved,drpicox_approved_str,drpicox_changes_requested,drpicox_changes_requested_str,drpicox_dismissed,drpicox_dismissed_str,witoldszpur_commented,witoldszpur_commented_str,witoldszpur_approved,witoldszpur_approved_str,witoldszpur_changes_requested,witoldszpur_changes_requested_str,witoldszpur_dismissed,witoldszpur_dismissed_str,jbedard_commented,jbedard_commented_str,jbedard_approved,jbedard_approved_str,jbedard_changes_requested,jbedard_changes_requested_str,jbedard_dismissed,jbedard_dismissed_str,m-amr_commented,m-amr_commented_str,m-amr_approved,m-amr_approved_str,m-amr_changes_requested,m-amr_changes_requested_str,m-amr_dismissed,m-amr_dismissed_str,hereblur_commented,hereblur_commented_str,hereblur_approved,hereblur_approved_str,hereblur_changes_requested,hereblur_changes_requested_str,hereblur_dismissed,hereblur_dismissed_str,thorn0_commented,thorn0_commented_str,thorn0_approved,thorn0_approved_str,thorn0_changes_requested,thorn0_changes_requested_str,thorn0_dismissed,thorn0_dismissed_str,arw-travela_commented,arw-travela_commented_str,arw-travela_approved,arw-travela_approved_str,arw-travela_changes_requested,arw-travela_changes_requested_str,arw-travela_dismissed,arw-travela_dismissed_str,jsoref_commented,jsoref_commented_str,jsoref_approved,jsoref_approved_str,jsoref_changes_requested,jsoref_changes_requested_str,jsoref_dismissed,jsoref_dismissed_str,butla_commented,butla_commented_str,butla_approved,butla_approved_str,butla_changes_requested,butla_changes_requested_str,butla_dismissed,butla_dismissed_str,klieber_commented,klieber_commented_str,klieber_approved,klieber_approved_str,klieber_changes_requested,klieber_changes_requested_str,klieber_dismissed,klieber_dismissed_str,mmccallum_commented,mmccallum_commented_str,mmccallum_approved,mmccallum_approved_str,mmccallum_changes_requested,mmccallum_changes_requested_str,mmccallum_dismissed,mmccallum_dismissed_str,koto_commented,koto_commented_str,koto_approved,koto_approved_str,koto_changes_requested,koto_changes_requested_str,koto_dismissed,koto_dismissed_str,IgorMinar_commented,IgorMinar_commented_str,IgorMinar_approved,IgorMinar_approved_str,IgorMinar_changes_requested,IgorMinar_changes_requested_str,IgorMinar_dismissed,IgorMinar_dismissed_str,Rob--W_commented,Rob--W_commented_str,Rob--W_approved,Rob--W_approved_str,Rob--W_changes_requested,Rob--W_changes_requested_str,Rob--W_dismissed,Rob--W_dismissed_str,Daniel15_commented,Daniel15_commented_str,Daniel15_approved,Daniel15_approved_str,Daniel15_changes_requested,Daniel15_changes_requested_str,Daniel15_dismissed,Daniel15_dismissed_str,Karthikvenkat86_commented,Karthikvenkat86_commented_str,Karthikvenkat86_approved,Karthikvenkat86_approved_str,Karthikvenkat86_changes_requested,Karthikvenkat86_changes_requested_str,Karthikvenkat86_dismissed,Karthikvenkat86_dismissed_str,kaufholdr_commented,kaufholdr_commented_str,kaufholdr_approved,kaufholdr_approved_str,kaufholdr_changes_requested,kaufholdr_changes_requested_str,kaufholdr_dismissed,kaufholdr_dismissed_str,jannickfahlbusch_commented,jannickfahlbusch_commented_str,jannickfahlbusch_approved,jannickfahlbusch_approved_str,jannickfahlbusch_changes_requested,jannickfahlbusch_changes_requested_str,jannickfahlbusch_dismissed,jannickfahlbusch_dismissed_str,simon04_commented,simon04_commented_str,simon04_approved,simon04_approved_str,simon04_changes_requested,simon04_changes_requested_str,simon04_dismissed,simon04_dismissed_str,graingert_commented,graingert_commented_str,graingert_approved,graingert_approved_str,graingert_changes_requested,graingert_changes_requested_str,graingert_dismissed,graingert_dismissed_str,bathos_commented,bathos_commented_str,bathos_approved,bathos_approved_str,bathos_changes_requested,bathos_changes_requested_str,bathos_dismissed,bathos_dismissed_str,sjelin_commented,sjelin_commented_str,sjelin_approved,sjelin_approved_str,sjelin_changes_requested,sjelin_changes_requested_str,sjelin_dismissed,sjelin_dismissed_str,Nikhil22_commented,Nikhil22_commented_str,Nikhil22_approved,Nikhil22_approved_str,Nikhil22_changes_requested,Nikhil22_changes_requested_str,Nikhil22_dismissed,Nikhil22_dismissed_str,davesidious_commented,davesidious_commented_str,davesidious_approved,davesidious_approved_str,davesidious_changes_requested,davesidious_changes_requested_str,davesidious_dismissed,davesidious_dismissed_str,frederikprijck_commented,frederikprijck_commented_str,frederikprijck_approved,frederikprijck_approved_str,frederikprijck_changes_requested,frederikprijck_changes_requested_str,frederikprijck_dismissed,frederikprijck_dismissed_str,kindy_commented,kindy_commented_str,kindy_approved,kindy_approved_str,kindy_changes_requested,kindy_changes_requested_str,kindy_dismissed,kindy_dismissed_str,vteremasov_commented,vteremasov_commented_str,vteremasov_approved,vteremasov_approved_str,vteremasov_changes_requested,vteremasov_changes_requested_str,vteremasov_dismissed,vteremasov_dismissed_str,kylewuolle_commented,kylewuolle_commented_str,kylewuolle_approved,kylewuolle_approved_str,kylewuolle_changes_requested,kylewuolle_changes_requested_str,kylewuolle_dismissed,kylewuolle_dismissed_str,thomasdc_commented,thomasdc_commented_str,thomasdc_approved,thomasdc_approved_str,thomasdc_changes_requested,thomasdc_changes_requested_str,thomasdc_dismissed,thomasdc_dismissed_str,mattlewis92_commented,mattlewis92_commented_str,mattlewis92_approved,mattlewis92_approved_str,mattlewis92_changes_requested,mattlewis92_changes_requested_str,mattlewis92_dismissed,mattlewis92_dismissed_str,zuzusik_commented,zuzusik_commented_str,zuzusik_approved,zuzusik_approved_str,zuzusik_changes_requested,zuzusik_changes_requested_str,zuzusik_dismissed,zuzusik_dismissed_str,mrohr_commented,mrohr_commented_str,mrohr_approved,mrohr_approved_str,mrohr_changes_requested,mrohr_changes_requested_str,mrohr_dismissed,mrohr_dismissed_str,chirag64_commented,chirag64_commented_str,chirag64_approved,chirag64_approved_str,chirag64_changes_requested,chirag64_changes_requested_str,chirag64_dismissed,chirag64_dismissed_str,nahidshahin_commented,nahidshahin_commented_str,nahidshahin_approved,nahidshahin_approved_str,nahidshahin_changes_requested,nahidshahin_changes_requested_str,nahidshahin_dismissed,nahidshahin_dismissed_str,pbr1111_commented,pbr1111_commented_str,pbr1111_approved,pbr1111_approved_str,pbr1111_changes_requested,pbr1111_changes_requested_str,pbr1111_dismissed,pbr1111_dismissed_str,nachodiaz_commented,nachodiaz_commented_str,nachodiaz_approved,nachodiaz_approved_str,nachodiaz_changes_requested,nachodiaz_changes_requested_str,nachodiaz_dismissed,nachodiaz_dismissed_str,pondermatic_commented,pondermatic_commented_str,pondermatic_approved,pondermatic_approved_str,pondermatic_changes_requested,pondermatic_changes_requested_str,pondermatic_dismissed,pondermatic_dismissed_str,sanjeevrahul_commented,sanjeevrahul_commented_str,sanjeevrahul_approved,sanjeevrahul_approved_str,sanjeevrahul_changes_requested,sanjeevrahul_changes_requested_str,sanjeevrahul_dismissed,sanjeevrahul_dismissed_str,lgalfaso_commented,lgalfaso_commented_str,lgalfaso_approved,lgalfaso_approved_str,lgalfaso_changes_requested,lgalfaso_changes_requested_str,lgalfaso_dismissed,lgalfaso_dismissed_str,StrangelyTyped_commented,StrangelyTyped_commented_str,StrangelyTyped_approved,StrangelyTyped_approved_str,StrangelyTyped_changes_requested,StrangelyTyped_changes_requested_str,StrangelyTyped_dismissed,StrangelyTyped_dismissed_str,gdi2290_commented,gdi2290_commented_str,gdi2290_approved,gdi2290_approved_str,gdi2290_changes_requested,gdi2290_changes_requested_str,gdi2290_dismissed,gdi2290_dismissed_str,luciomartinez_commented,luciomartinez_commented_str,luciomartinez_approved,luciomartinez_approved_str,luciomartinez_changes_requested,luciomartinez_changes_requested_str,luciomartinez_dismissed,luciomartinez_dismissed_str,lucasmaj_commented,lucasmaj_commented_str,lucasmaj_approved,lucasmaj_approved_str,lucasmaj_changes_requested,lucasmaj_changes_requested_str,lucasmaj_dismissed,lucasmaj_dismissed_str,kspearrin_commented,kspearrin_commented_str,kspearrin_approved,kspearrin_approved_str,kspearrin_changes_requested,kspearrin_changes_requested_str,kspearrin_dismissed,kspearrin_dismissed_str,zalenix_commented,zalenix_commented_str,zalenix_approved,zalenix_approved_str,zalenix_changes_requested,zalenix_changes_requested_str,zalenix_dismissed,zalenix_dismissed_str,katsos_commented,katsos_commented_str,katsos_approved,katsos_approved_str,katsos_changes_requested,katsos_changes_requested_str,katsos_dismissed,katsos_dismissed_str
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,33492777,sec(http): JSONP should require trusted resource URLs,WORK-IN-PROGRESS.  Do **NOT** merge.  More work needs to be done and the tests are currently broken.\n- JSONP should require trusted resource URLs.  This would be a breaking\n  change but maybe not too onerous since same origin URLs are trusted in\n  the default config and you can easily whitelist any 3rd party URLs you\n  trust in one single place (your app/module config.)\n- fix a bug where $http can't handle $sce wrapper URLs.\n\nCloses #11352\nCloses #11328\n,closed,false,2015-04-16T21:06:46.000Z,2016-09-15T20:32:10.000Z,2016-09-15T20:32:10.000Z,false,false,5,2,8,1,58,24,4,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,85474864,feat(http): JSONP requests now require trusted resource URLs,"JSONP requests allow full access to the browser and the JavaScript context. So allowing a malicious attacker to make a JSONP request to an evil server could have bad results.\n\nBy requiring that JSONP urls are trusted we make it easier for developers to see that their app is only able to make JSONP requests to urls that they have audited.\n\nThere are two ways to trust:\n- whitelisting the url\n- explicitly marking a url as trusted by calling `$sce.trustAs`\n\nThe first commit in this PR ensures that all JSONP requests use a URL that is validated against the `$sce` ResourceUrl whitelist/blacklist checking. This commit creates a Breaking Change for app developers as they must now add all of their JSONP endpoints to the whitelist before their app will work. Although as significant breaking change, it is fairly simple to fix: just search for all calls to `$http.jsonp` and identify the url. Of course if the url is being generated dynamically then this is harder to fix but also indicates that perhaps there is a security vulnerability.\n\nThe second commit allows developers to provide explicitly trusted urls as a result of calling `$sce.trustAsResourceUrl`. This second approach has a few quirks:\n- the `$http` service needs to append parameters to the url, which means that the trusted url must be unwrapped, modified and then re-wrapped as trusted before passing it to `$httpBackend`.\n- it may be possible (??) that there might be an attack vector if an attacker is able to access a different endpoint by changing the parameters. But perhaps since the domain and path cannot be modified by the param serializer this is not an issue?\n\n_Is it acceptable (from a security point of view) to allow parameters to be added to a trusted url? If so then we could refactor the checks to happen in the `$http` service instead of `$httpBackend` which would remove the need for the re-wrapping of the built url._\n\nCloses #11352\nCloses #11328\n",closed,false,2016-09-15T20:31:41.000Z,2016-09-20T09:06:17.000Z,2016-09-20T09:05:54.000Z,false,false,8,14,23,2,66,25,6,7,"  Thanks @gkalpak \n     ",0,,0,,0,,1," ",0,,0,,0,,2,"  ",0,,2,"  ",0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,85384405,refactor(compileSpec): make tests consistent,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nrefactor\n\n**What is the current behavior? (You can also link to an open issue here)**\nTests are duplicated and have non-optimal expects\n\n**What is the new behavior (if this is a feature change)?**\nTests use they and have been moved to one place\n",closed,false,2016-09-15T11:07:16.000Z,2016-10-14T09:39:21.000Z,2016-10-14T09:39:21.000Z,true,,1,6,9,1,72,134,1,0,,0,,0,,0,,3,"   ",0,,0,,0,,1," ",1," LGTM\n",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,85619110,Updated README.md - Add additional introductory paragraph,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n",closed,false,2016-09-16T18:32:09.000Z,2016-10-08T18:50:31.000Z,2016-10-08T18:42:54.000Z,false,,10,2,2,3,5,0,1,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,85936378,"feat($httpBackend): JSONP requests now require trusted resource ",This PR replaces #15143 which is too complicated.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n,closed,false,2016-09-20T09:04:59.000Z,2016-10-05T13:42:40.000Z,2016-10-05T13:42:40.000Z,false,false,11,36,47,3,219,36,6,26,"                          ",0,,0,,0,,1," ",0,,1," ",0,,4," Basically LGTM. It's obviously not a full-proof solution, but it is better that what we have now.\n  LGTM (other than a couple of nitpicks and the occasional >100chars-long lines 😛)\n ",1," LGTM\n",0,,0,,2,"  ",0,,0,,0,,0,,1," LGTM\n
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,85493013,fix($sce): Consider document base URL for 'self' URL policy.,"This PR fixes the issue in bug #15144. If the page specifies a base URL using `<base>` tag, Angular may start to reject relative resource URL if the base URL domain does not match the loading domain. This PR adjusts matchUrl() to also consider the base URL (`document.baseURI`) in addition to `location.href` when matching URLs against the 'self' URl policy.\n\nThis PR does not introduce any breaking changes.\n\nSecurity note: SCE policy can be circumvented by rogue `<base>` tags on the page. However, I believe this is not too much of a concern. If an attacker can inject `<base>` tags, then it's very likely they can inject arbitrary HTML, which is a way worse vulnerability.\n",closed,false,2016-09-15T22:38:18.000Z,2017-01-17T11:24:08.000Z,2017-01-10T12:50:45.000Z,false,false,19,11,23,13,156,13,9,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM",3," Looks good in general. I have left a couple of minor (or not so minor) comments.\n\nI think we need to account for `base.href` chaning dynamically.\nAnd there should probably be some unit tests too.\n  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,7,"       ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,86248399,docs(guide/Filters): Fix incorrect wording,"**What kind of change does this PR introduce?** Docs\n\n**What is the current behavior?** Incorrect wording\n\n**What is the new behavior (if this is a feature change)?** Correct wording\n\n**Does this PR introduce a breaking change?** No\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nI don't think ""Idempotence"" is a property that filters need to fulfill: https://en.wikipedia.org/wiki/Idempotence. Idempotence means that `f(f(x)) == f(x)`, i.e. that applying a filter to the result of itself gives the same value as only applying it once. Many common filters are not idempotent. For example, applying reverse twice is not the same as applying it once.\n",closed,false,2016-09-21T21:53:35.000Z,2016-09-26T02:12:10.000Z,2016-09-25T13:19:52.000Z,false,false,5,7,7,0,0,0,0,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,5,"     ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,86499515,Align jqLite's attr method with jQuery,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRefactors & breaking API changes.\n\n**What is the current behavior? (You can also link to an open issue here)**\nBoolean attribute getters take properties into account and setters modify them. All falsy values for boolean attribute setters remove the attribute and set the property to false. The `null` value in a setter (for all attributes, not only boolean ones) sets the attribute value to the string `""null""` instead of removing it.\n\n**What is the new behavior (if this is a feature change)?**\nBoolean attribute getters/setters don't touch properties. The `null` value in a setter (for all attributes, not only boolean ones) removes the attribute. The `false` value removes it only for boolean attributes. Other defined values for boolean attributes set the value to the lowercased attribute name.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~ - only in a form of commit messages with their `BREAKING CHANGES` sections; is anything else needed?\n\n**Other information**:\n",closed,false,2016-09-23T11:50:18.000Z,2016-10-06T10:48:56.000Z,2016-10-06T10:48:48.000Z,true,,7,24,31,10,122,29,2,3,"   ",0,,0,,0,,0,,0,,0,,0,,5," I have left a couple of (mostly minor) comments. \n\nOne thing that I believe is not pointed out explicitly enough in the BC notices is the fact that boolean attribute getters do **not** rely on the value of the corresponding property (as was previously the case).\n\nFrom the commit message:\n\n> Previously, all boolean attributes were reflected into properties in a setter and from a property in a getter, even on elements that don't treat those attributes in a special way. Now it's only happening for the elements where browsers do the conversion automatically.\n\nThis sounds to me like boolean attribute getters will still take the property into account, but only on browsers that do the conversion automatically (which is not the case).\n    ",1," LGTM\n<sub>(Don't forget the issue for removing `bind/unbind' :smiley:)</sub>\n",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,15,"               ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,87683016,Patch 14734 boolean sync validators,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nFix/clarification of how synchronous validators work.\n\n**What is the current behavior? (You can also link to an open issue here)**\n#14734 All values except `false` literal and `undefined` are treated as a pass. `undefined` is treated as pending, which makes no sense for synchronous operation.\n\n**What is the new behavior (if this is a feature change)?**\n\nAll falsy value returns to a synchronous validator are treated as fails, including `undefined`.\n\n**Does this PR introduce a breaking change?**\n\nYes, see commit message.\n\n**Please check if the PR fulfills these requirements**\n- [ x ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ x ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nI believe a change to docs in unnecessary. We still expect `true` and `false` to be the primary returns and don't want to encourage otherwise. This is mostly clarifying a niche, undocumented, edge-case to behave more intuitively.\n",closed,false,2016-10-03T09:03:36.000Z,2016-10-05T19:43:16.000Z,2016-10-05T19:43:16.000Z,false,false,2,4,4,5,27,1,2,0,,0,,0,,0,,0,,0,,0,,0,,2," Apart from a couple of nitpicks, LGTM.\n\n<sub>I would add a little more details to the commit message (regarding what was happening before) - can be done while merging.</sub>\n ",1," LGTM\n",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,87849963,fix($q): treat thrown errors as regular rejections,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRefactor/Fix (depending on your point of view).\n\n**What is the current behavior? (You can also link to an open issue here)**\nErrors thrown in a promise's `onFulfilled` or `onRejected` handlers are treated in a\nslightly different manner than regular rejections:  \nThey are passed to the `$exceptionHandler()` (in addition to being converted to rejections).\nSee also #3174 and #14745.\n\n**What is the new behavior (if this is a feature change)?**\nThe distinction is removed, by skipping the call to `$exceptionHandler()`, thus treating\nthrown errors as regular rejections.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\nPreviously, errors thrown in a promise's `onFulfilled` or `onRejected` handlers were treated in a\nslightly different manner than regular rejections:\nThey were passed to the `$exceptionHandler()` (in addition to being converted to rejections).\n\nThe reasoning for this behavior was that an uncaught error is different than a regular rejection, as\nit can be caused by a programming error, for example. In practice, this turned out to be confusing\nor undesirable for users, since neither native promises nor any other popular promise library\ndistinguishes thrown errors from regular rejections.\n(Note: While this behavior does not go against the Promises/A+ spec, it is not prescribed either.)\n\nThis commit removes the distinction, by skipping the call to `$exceptionHandler()`, thus treating\nthrown errors as regular rejections.\n\n**Note:**\nUnless explicitly turned off, possibly unhandled rejections will still be caught and passed to the\n`$exceptionHandler()`, so errors thrown due to programming errors and not otherwise handled (with a\nsubsequent `onRejected` handler) will not go unnoticed.\n\nBREAKING CHANGE:\n\nPreviously, throwing an error from a promise's `onFulfilled` or `onRejection` handlers, would result\nin passing the error to the `$exceptionHandler()` (in addition to rejecting the promise with the\nerror as reason).\n\nNow, a thrown error is treated exactly the same as a regular rejection. This applies to all\nservices/controllers/filters etc that rely on `$q` (including built-in services, such as `$http` and\n`$route`). For example, `$http`'s `transformRequest/Response` functions or a route's `redirectTo`\nfunction as well as functions specified in a route's `resolve` object, will no longer result in a\ncall to `$exceptionHandler()` if they throw an error. Other than that, everything will continue to\nbehave in the same way; i.e. the promises will be rejected, route transition will be cancelled,\n`$routeChangeError` events will be broadcasted etc.\n\nFixes #3174\nFixes #14745\n",closed,false,2016-10-04T08:17:36.000Z,2016-10-05T11:53:21.000Z,2016-10-05T11:49:56.000Z,false,false,1,10,12,3,180,203,9,2,"  ",1," ",1," A few minor things but generally LGTM\n",0,,0,,0,,0,,0,,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,65893955,perf(ngClass): refactor to optimize the case of static map of classes with large objects,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**: performance improvement\n\n**What is the current behavior? (You can also link to an open issue here)**: it makes copies of very large objects:\n\n``` javascript\n    it('should not copy verylargeobject', inject(function($rootScope, $compile) {\n      var getProp = jasmine.createSpy('getProp');\n      var verylargeobject = {};\n      Object.defineProperty(verylargeobject, 'prop', {\n        get: getProp,\n        enumerable: true\n      });\n      element = $compile('<div ng-class=""{foo: verylargeobject}""></div>')($rootScope);\n      $rootScope.verylargeobject = verylargeobject;\n      $rootScope.$digest();\n\n      expect(getProp).not.toHaveBeenCalled();\n    }));\n```\n\n**What is the new behavior (if this is a feature change)?**: the user perceives no change but that it is faster with very large objects\n\n**Does this PR introduce a breaking change?**: no\n\n**Please check if the PR fulfills these requirements**\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [X] Tests for the changes have been added (for bug fixes / features)\n- [X] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nThis PR responds to https://github.com/angular/angular.js/pull/14394#issuecomment-207812797 \nIt is alternative to https://github.com/angular/angular.js/pull/14394\n",closed,false,2016-04-09T22:06:39.000Z,2016-12-09T10:00:36.000Z,2016-12-09T10:00:36.000Z,false,false,13,12,20,2,202,30,2,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,1," There a couple of issues with this implementation.\n\nTBH, I feel like there should be a more straight-forward way to achieve the same. I'll poke around.\n",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,9,"         ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,83046781,refactor($q): separate Deferred out of Promise implementation,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nrefactor / cleanup, maybe performance gains when creating promises\n\nThis makes `Deferred` a simple wrapper of `Promise`. `Promise`s can now be constructed, chained etc without creating any `Deferred` objects.\n\nBest viewed [ignoring whitespace](https://github.com/angular/angular.js/pull/15064/files/?w=1)\n",closed,false,2016-08-29T05:37:10.000Z,2016-10-07T09:14:34.000Z,2016-10-07T09:14:33.000Z,false,false,10,1,4,1,97,103,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,41179092,feat(angular.info): optionally store and access additional info on mo…,"…dules\n\nThis feature allows the developer to store additional meta data about a\nmodule when it is defined by adding an additional parameter containing\nan object to the `angular.module(moduleName, deps, info, configFn)` call.\n\nDevelopers can then access this information by calling `angular.info(moduleName)`\n\nSee this https://github.com/angular/material/issues/3842 for more background.\n",closed,false,2015-07-29T22:19:27.000Z,2016-11-24T09:04:03.000Z,2016-10-07T13:03:55.000Z,false,false,16,1,10,1,99,6,7,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,88434393,Module info,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nfeature\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nNo way to find information about the currently loaded modules\n\n**What is the new behavior (if this is a feature change)?**\n\nTwo new features:\n- a method on `Module` (`info()`) that lets developers add arbitrary info about their modules.\n- a property on `$injector` (`modules`) that lets developers access the module objects that were loaded into the injector at bootstrap.\n\nThis second item could also be useful to @ocombe for his ocLazyLoad project.\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nReplaces the previous #12465 PR\n",closed,false,2016-10-07T13:03:29.000Z,2017-03-02T08:23:16.000Z,2017-03-02T08:23:16.000Z,false,false,8,27,29,3,158,6,18,12,"            ",0,,0,,0,,0,,0,,0,,0,,10,"         Have you considered ""version-stamping"" `ngLocale`? ",1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,88537483,ngClass[Odd/Even] overhaul,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFix, Test, Refactor, Perf\n\n**What is the current behavior? (You can also link to an open issue here)**\nBroken, inefficient.\n\n**What is the new behavior (if this is a feature change)?**\nFixed, efficient.\n\n**Does this PR introduce a breaking change?**\nNo (to the best of my knowledge).\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\nSupercedes (and partly based on) #14404. Mad props to @drpicox for the initial idea and implementation.\n\nThis PR has been broken up in smaller, focused commits for easier reviewing. Better to review commit by commit (and probably in order). Most commits are (more or less) trivial - except for the last one.\n\nRefactoring commits:\n- 8822006: refactor(ngClass): remove unnecessary dependency on `$animate`\n- 0409589: refactor(ngClass): remove redundant `$observe`r\n- 2871a11: refactor(ngClass): simplify conditions\n- a7e69f7: refactor(ngClass): move helper functions outside the closure\n- 37cec7a: refactor(ngClass): exit `arrayDifference()` early if an input is empty\n\nTest commits:\n- 2705085: test(ngClass): add some tests about one-time bindings and objects inside arrays\n\nFix commits:\n- 0ba4be6: fix(ngClassOdd/Even): keep track of classes even if odd/even do not match index\n\nPerf commits:\n- 89268af: perf(ngClass): only access the element's `data` once\n- 5708424: perf(ngClass): avoid deep-watching (if possible) and unnecessary copies\n\nCloses #14404\n",closed,false,2016-10-08T07:37:19.000Z,2016-12-09T10:12:12.000Z,2016-10-11T18:40:56.000Z,false,false,4,11,12,15,399,128,2,6,"     > When using large objects as keys (e.g.: `{loaded: $ctrl.data}`).\n\nI think you mean ""When using large objects as values..."", right?\n ",0,,0,,0,,0,,0,,0,,0,,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,88539670,feat(input): add opt-in support for `input[range]`,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFeature\n\n**What is the current behavior? (You can also link to an open issue here)**\n`input[range]` is not supported.\n\n**What is the new behavior (if this is a feature change)?**\nSupport for `input[range]` can be opted into, by using the `ng-range-input` attribute.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nThis is a POC. Docs need to be updated.\n",closed,false,2016-10-08T09:06:16.000Z,2016-10-10T19:16:05.000Z,2016-10-10T17:30:49.000Z,false,false,6,6,7,3,911,17,5,3,"   ",0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,88593165,fix($location): prevent infinite digest with IDN urls in Edge,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFix\n\n**What is the current behavior? (You can also link to an open issue here)**\nInternationalized Domain Name Urls (IDN), e.g. with an Umlaut, in Edge lead to an infinite digest on page load.\n\n**What is the new behavior (if this is a feature change)?**\nNo Infdig\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\nFixes #15217\n\nNote:\nWe don't test on Edge yet, but I've tested this locally with the https://github.com/nickmccurdy/karma-edge-launcher \n",closed,false,2016-10-09T20:20:04.000Z,2016-10-17T10:21:29.000Z,2016-10-17T10:21:29.000Z,true,,6,2,2,2,11,3,2,0,,0,,0,,0,,0,,0,,0,,0,,1," If were concerned about perfromance, we could ""sniff"" if the implementation of `lastIndexOf` is broken and fall back to `indexOf` or `slice` (I am not sure which on is faster).\n\nBut this function isn't on a performance-critical path, so it might not be worth ""super-optimizing"".\n",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,88597992,feat(jqLite): implement jqLite(f) as alias to jqLite(document).ready(f) (also: deprecate the latter in the second commit),"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFeature\n\n**What is the current behavior? (You can also link to an open issue here)**\n`jqLite(callback)` is not supported.\n\n**What is the new behavior (if this is a feature change)?**\n`jqLite(callback)` is an alias to `jqLite(document).ready(callback)`. The latter is now deprecated.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n",closed,false,2016-10-09T22:55:59.000Z,2016-10-12T17:33:12.000Z,2016-10-12T17:33:08.000Z,false,,1,16,24,5,104,30,8,1," ",1," LGTM - we can do the refactor (if it works) of removing the event handlers in another PR later.\n",0,,0,,0,,0,,0,,0,,2,"  ",1," LGTM\n",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,8,"        ",0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,88599923,refactor(data): camelCase keys in jqLite#data,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nA behavior change.\n\n**What is the current behavior? (You can also link to an open issue here)**\n`jqLite#data` uses keys unchanged.\n\n**What is the new behavior (if this is a feature change)?**\n`jqLite#data` camelCases keys in its getters/setters. This aligns jqLite with jQuery.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThis is WIP; this might slightly decrease performance so I wanted to discuss it first.\n\nAlso, finishing this would require making our `camelCase` function more strict so I'd like to discuss it first but I think we should do that anyway; the `-moz-` hack doesn't really belong here.\n",closed,false,2016-10-10T00:01:13.000Z,2016-10-13T07:47:07.000Z,2016-10-13T06:47:45.000Z,false,,10,6,7,2,198,32,6,2," If performance is a concern then we ought to run some benchmarking...\nCan we make `camelCase()` more efficient in the common case?\n ",0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,88697441,chore(benchpress): add a ngClass benchmark,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**: benchmark\nAdds a benchmark to measure the impact of changes in ngClass.\n\n**What is the current behavior? (You can also link to an open issue here)**: https://github.com/angular/angular.js/pull/15228#commitcomment-19347288 \n\n**What is the new behavior (if this is a feature change)?** no change\n\n**Does this PR introduce a breaking change?** no\n\n**Please check if the PR fulfills these requirements**\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] ~~Tests for the changes have been added (for bug fixes / features)~~\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\nIt adds a benchmark in `benchmarks/ng-class-bp`\nThe benchmark was designed to measure the changes introduced by: https://github.com/angular/angular.js/pull/15228\n\nIt has the following steps:\n- _setup_: cleanups preview, and create structures, not worth to measure\n- _create_: creation of a table/list with the selected number of items and applied classes\n- _$apply_: an apply without changes (compute digest time)\n- _update_: cost of updating classes (changes ng-classes values)\n- _unclass_: cost of removing all classes (falses all ngClass values)\n- _class_: cost of apply classes (applies all classes given already constructed elements)\n- _destroy_: cost of removing everything from dom (usually not worth to measure)\n\nThere are three versions to paint:\n- **optimized table**: a table with optimized ngClass values `ng-class=""'success' && todo.completed""`\n- **unoptimized table**: a table with object ngClass syntaxis: `ng-class=""{success: todo.completed}""`\n- **list**: list of todos with an object ngClass and all cases: `ng-class=""{completed: todo.completed, important: todo.important, urgent: todo.urgent}""`\n- **single optimized**: it computes a single ngClass using a complex object but optimizing the access `ng-class=""{success: !!$ctrl.todos, danger: !$ctrl.todos}""`\n- **single**: it computes a single ngClass using a complex object `ng-class=""{success: $ctrl.todos, danger: !$ctrl.todos}""`\n\nI ran them over the previous version of ngClass and the version of #15228 , the results are:\n- create, update, unclass, class:\n  - variability in create, update, unclass and class seems to have more or less the same performance\n  - the variability seems bigger in the #15228 implementation\n- $apply:\n  - optimized table:\n    - #15228 is around a 25% slower than previous version\n    - in my computer previous version took 0.75ms for 1000 rows, and for  #15228 around 1ms\n    - I think that this implementation is not often used\n  - unoptimized table and list:\n    - #15228 is faster than previous version, around 5x and 10x faster\n    - I ran the benchmark many times just to be sure\n    - previous version has high variability from 7ms ~ 13ms\n    -  #15228 maintains the speed around 1ms\n  - single optimized:\n    - #15228 seems to be slower but there is high variability\n    - times are around 0.02ms ~ 0.08ms\n  - single:\n    - #15228 is really really faster (around more than 100x faster)\n    - times of #15228 are close to single optimized\n    - previous version takes around 1.5ms\n\nI also modified #15228 to use compile instead of link (commented in https://github.com/angular/angular.js/pull/15228#commitcomment-19360023 ). Results are:\n- create:\n  - it improves the performance around 5%~10% (faster compile time)\n- other cases:\n  - no appreciable changes\n\nSo, as a conclusion, it seems that the **#15228  optimizes automatically code in the same fashion that an experienced angular programmers would do** manually. \nIn the other hand, given that 1 frame is around 16ms, we should give 8ms to the browser to update, it leaves 8ms for the application to work. Experiments show that digest loop times moves from values like 8 or 10ms to just 1ms in large lists, or 0.01ms in a single big object condition.\n",closed,false,2016-10-10T16:59:33.000Z,2016-12-09T10:21:29.000Z,2016-12-09T10:21:29.000Z,false,,1,4,7,1,300,0,3,0,,0,,0,,0,,0,,0,,0,,0,,1," Nice! It is obviously not exhaustive (e.g. no array or one-time bindings or alternating `$index`es), but it covers most common usecases (and is of course much better than what we (didn't) have before) 👍\n\nSo, if I understand correctly, #15228 is indeed a major improvements in most cases (but a slight de-opt in some). I think we can live with that, given the benefits.\n\n💯 on putting this together and doing the comparisons!\n",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,80322583,fix($parse): treat falsy values as defined in assignment expressions,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug,  solving Issue https://github.com/angular/angular.js/issues/14990\n\nCloses #14990\n",closed,false,2016-08-06T00:05:19.000Z,2016-10-12T07:17:58.000Z,2016-10-12T07:17:58.000Z,false,,20,2,5,1,74,4,2,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,88873234,ngClass[Odd/Even] overhaul (2),"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFix, Test, Refactor, Perf\n\n**What is the current behavior? (You can also link to an open issue here)**\nBroken, inefficient.\n\n**What is the new behavior (if this is a feature change)?**\nFixed, efficient.\n\n**Does this PR introduce a breaking change?**\nNo (to the best of my knowledge).\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\nThis is a cleaned up version of #15228 (I didn't want to rebase #15228 to avoid losing existing comments or their context).\n\nSo, #15243 applies to this PR as well.\n",closed,false,2016-10-11T17:14:14.000Z,2016-12-09T10:46:55.000Z,2016-12-09T10:00:36.000Z,false,false,8,2,0,9,390,129,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,89006181,refactor(*): separate jqLite/compile/sce camelCasing logic,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRefactor\n\n**What is the current behavior? (You can also link to an open issue here)**\njqLite's camelCasing logic converts not only dashes but also underscores & colons; it also collapses multiple dashes etc.\n\n**What is the new behavior (if this is a feature change)?**\njqLite's camelCasing logic is separated from the one used in compile/sce and more strict, making jqLite more similar to the jQuery behavior. This is also needed to make the new planned data key camelCasing work like in jQuery 3.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\njqLite needs camelCase for it's css method; it should only convert one dash\nfollowed by a lowercase letter to an uppercase one; it shouldn't touch\nunderscores, colons or collapse multiple dashes into one. This is behavior\nof jQuery 3 as well.\n\nThis commit separates jqLite camelCasing from the $compile one (and $sce but\nthat's an internal-only use). The $compile version should behave as before.\n\nAlso, jqLite's css camelCasing logic was put in a separate function and\nrefactored: now the properties starting from an uppercase letter are used by\ndefault (i.e. Webkit, not webkit) and the only exception is for the -ms- prefix\nthat is converted to ms, not Ms. This makes the logic clearer as we're just\nalways changing a dash followed by a lowercase letter by an uppercase one; this\nis also how it works in jQuery.\n\nRef #15126\nFix #7744\n",closed,false,2016-10-12T12:26:21.000Z,2016-10-13T07:46:38.000Z,2016-10-13T06:54:49.000Z,false,false,6,11,13,1,159,29,6,6,"      ",0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,59837918,"feat(ngAsDirective): new as directive to publish component controllers into current scope ","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)** Feature.\n\n**What is the current behavior? (You can also link to an open issue here)**: \nWith restrict you can reference parent controllers from a children, but if you want to reference children components you need to find them with _jqLike_ and then get the controller.\n\n**What is the new behavior (if this is a feature change)?**: \nIt adds a new directive that assigns the controller of the current DOM element component to any expression. If the element is destroyed (ex: it was inside ngIf or ngRepeat) it assigns a null.\n\n``` html\n<toggle ng-as=""burger""></toggle>\n<menu ng-if=""burger.isVisible""></menu>\n...\n<countdown-timer ng-as=""$ctrl.countdownTimer""></countdown-timer>\n<button ng-click=""$ctrl.relaunch()""></button>\n```\n\n**Does this PR introduce a breaking change?** \nNo.\n\n**Please check if the PR fulfills these requirements**\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [X] Tests for the changes have been added (for bug fixes / features)\n- [X] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nI present in this PR the implementation of a directive that I use in almost all my projects (and other projects in which I'm consultant) since the last year.\n### Basic use\n\nIt is really simple: it publishes the controller of component in the current scope. Ex:\n\n``` html\n<toggle ng-as=""myToggle""></toggle>\n<button ng-click=""myToggle.toggle();"">Toggle</button>\n<p ng-show=""myToggle.isOpened()"">The toggle is active</p>\n```\n\nso it can be accessed from enclosing components. \nUntil this point, it is a kind of custom `controllerAs` property for parent scope.\n### Using with parent components\n\nIn addition, as following the recommendation did by @petebacondarwin in https://github.com/angular/angular.js/issues/10007#issuecomment-168425866 it is able to assign it to any value, event enclosing controller. Ex:\n\n``` html\n<toggle ng-as=""$ctrl.myToggle""></toggle>\n```\n### ~~Keep track of DOM elements~~\n\nIt also serves to look for exact DOM elements instead of relaying in _jqLite_ searches. In case that there is no a controller, the as directive assigns the current DOM element to the expression set.\n\n``` html\n    <br>From <a href=""https://developer.mozilla.org/en/docs/Web/HTML/Element/audio"">here</a>.<br>\n    <player></player>\n    <script>\n        angular.module('demo').component('player', {\n            template: '' +\n                '<audio as=""$ctrl.audio"" src=""http://developer.mozilla.org/@api/deki/files/2926/=AudioTest_(1).ogg""></audio>' +\n                '<button ng-click=""$ctrl.play()"">Play</button>' +\n                '',\n            controller: function() {\n                this.play = function() {\n                    this.audio.play();\n                };\n            },\n        });\n    </script>\n```\n### _Deprecating_ ngController\n#### Why?\n\nngController is great for SEO webpages, but it has the inconvenience that it does not integrates well with bindings and many things have to be done ""manually"". For example:\n\n``` html\n    <script>\n        angular\n            .module('demo', [])\n            .service('booksService', function() {\n                this.getBook = function(id) {\n                    return { name: 'name'+id, abstract: 'abstract...'+id };\n                };\n            });\n    </script>\n\n    <div ng-controller=""BookDetailController as bookDetailCtrl"" book-id=""1"">\n        <h1>{{bookDetailCtrl.book.name}}</h1>\n        <p>{{bookDetailCtrl.book.abstract}}</p>\n    </div>\n    <script>\n        angular.module('demo').controller('BookDetailController', function(booksService,$attrs) {\n            this.book = booksService.getBook($attrs.bookId);\n        });\n    </script>\n```\n\nIn this example it needs to access to `$attrs` manually to find the bookId. You can imagine more complex functionalities, but I think that this is just enough to expose.\n\nNow, imagine that we do a directive to handle the same behaviour:\n\n``` html\n    <static-book-detail book-id=""2"">\n        <h1>{{bookDetailCtrl.book.name}}</h1>\n        <p>{{bookDetailCtrl.book.abstract}}</p>\n    </static-book-detail>\n    <script>\n        angular.module('demo').directive('staticBookDetail', function() {\n            return {\n                scope: true,\n                controller: function(booksService) {\n                    this.book = booksService.getBook(this.bookId);\n                },\n                controllerAs: 'bookDetailCtrl',\n                bindToController: {\n                    bookId: '@',\n                },\n            };\n            this.book = booksService.getBook($attrs.bookId);\n        });\n    </script>\n```\n\nIt has a conceptual problem: you must know by heart that static-book-detail publishes the `bookDetailCtrl`. \n\nAlternatively you can use a component, which always use `$ctrl` like:\n\n``` html\n    <p>Does not works as expected:</p>\n    <static-book-component book-id=""3"">\n        <h1>{{$ctrl.book.name}}</h1>\n        <p>{{$ctrl.book.abstract}}</p>\n    </static-book-component>\n    <script>\n        angular.module('demo').component('staticBookComponent', {\n            bindings: {\n                bookId: '@',\n            },\n            controller: function(booksService) {\n                this.book = booksService.getBook(this.bookId);\n            },\n        });\n    </script>\n```\n\nbut this naive solution does not works because `$ctrl` is not defined in the same scope that code relies.\n#### Popossal\n\nFinally, using as you can have this solution that seems cleaner and more easy to understand:\n\n``` html\n    <p>It dows works (and no implicit):</p>\n    <static-book-component ng-as=""$ctrl"" book-id=""4"">\n        <h1>{{$ctrl.book.name}}</h1>\n        <p>{{$ctrl.book.abstract}}</p>\n    </static-book-component>\n\n    <script>\n        angular.module('demo').component('staticBookComponent', {\n            bindings: {\n                bookId: '@',\n            },\n            controller: function(booksService) {\n                this.book = booksService.getBook(this.bookId);\n            },\n        });\n    </script>\n```\n\n_Additional Notes_: `ngAs` directive behaviour is very close to **Angular2** `#` template variables. It also copies concepts from _RiotJS_ and _Polymer_ (at least first versions).\n",open,false,2016-02-18T17:57:16.000Z,2017-06-29T14:46:42.000Z,,false,,57,33,60,5,542,0,4,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,5,"     ",0,,0,,0,,11,"           ",0,,0,,0,,0,,0,,0,,0,,17,"                 ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,88767572,fix($resource): Delete $cancelRequest from toJSON(),"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nresult of ngResource.toJSON still include $cancelRequest\n\n**What is the new behavior (if this is a feature change)?**\nremove delete $cancelRequest from ngResource.toJSON's result.\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [ Y ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ N ] Tests for the changes have been added (for bug fixes / features)\n- [ N ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n",closed,false,2016-10-11T03:57:26.000Z,2016-12-29T08:02:08.000Z,2016-12-29T08:02:07.000Z,false,false,12,7,8,5,21,0,2,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,89191216,docs($rootScope.Scope): grammar,,closed,false,2016-10-13T12:23:33.000Z,2016-10-14T22:18:11.000Z,2016-10-14T22:18:11.000Z,false,,3,3,3,1,2,2,1,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,89251556,fix(input): fix `step` validation for `input[number]`/`input[range]`,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix.\n\n**What is the current behavior? (You can also link to an open issue here)**\n`step` validation (for `input[number]`/`input[range]`) fails on some occasions due to limitations of Floating Point Arithmetic (as described in #15257) and does not fully account for a `stepBase` as descussed in https://github.com/angular/angular.js/commit/9a8b8aa#commitcomment-19108436. \n\n**What is the new behavior (if this is a feature change)?**\nIt works as expected!\nBTW, according to [the spec](https://www.w3.org/TR/html5/forms.html#concept-input-min-zero), when there is no `min` attribute (to determine the step base), but there is a value attribute, then the step base is set to the value of that. In our case this doesn't apply very well, because the value attribute is not compatible with `ngModel` and is essentially ignored.\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n- [ ] Needs to be backported to 1.5.x for `[ng-input-range]`.\n\nFixes https://github.com/angular/angular.js/commit/9a8b8aa#commitcomment-19108436\nFixes #15257\n",closed,false,2016-10-13T17:58:58.000Z,2016-10-19T12:05:13.000Z,2016-10-19T11:55:52.000Z,false,false,2,10,13,5,280,132,2,0,,0,,0,,0,,4,"    ",0,,0,,0,,6,"      ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,89522550,fix($parse): allow watching object/array literals,"This moves the object/array-literal watching logic from $compile to $parse so it can by used by watchers anywhere (not only bindings).\n\nBy moving this to `$parse` we can potentially improve it more. Maybe pushing the `equals` check into `expressionInputDirtyCheck` for literals, then we can avoid creating the object and avoid calling `equals` on the full object each digest?\n\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nwatching object/array literals throws infdig if any inputs are non-simple values\n\n**What is the new behavior (if this is a feature change)?**\nwatching object/array literals does what compile previously did to solve this\n\n**Does this PR introduce a breaking change?**\nno\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n",closed,false,2016-10-16T10:54:24.000Z,2017-01-27T08:59:40.000Z,2017-01-27T08:59:40.000Z,false,false,7,6,5,1,26,3,3,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,89359706,fix(docsApp): show correct version number in api index,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfix in the docs app\n\n**What is the current behavior? (You can also link to an open issue here)**\nOn https://docs.angularjs.org/api, the text currently says \n\n> These pages contain the AngularJS reference materials for version 1.5.8 arbitrary-fallbacks.\n\nbut the default docs are for the master / snapshot version. \n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n\nPreviously, the index would show the version of Angular that runs on\nthe page, not the version for which the docs are. This meant that in\nthat snapshot docs the stable version was displayed.\n\nThe `$scope.docsVersion` value was used in the plnkr opening code, but\nhas not been used since https://github.com/angular/angular.js/commit/bdec35cebc89e0d80a04eeffbd71ad999fc7e61a.\n",closed,false,2016-10-14T10:21:40.000Z,2016-11-02T12:22:45.000Z,2016-11-02T12:22:39.000Z,true,,1,4,4,1,2,4,1,2,"  ",0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,89635713,chore(docs-app): allow switching to newer versions,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFeature for the docs app\n\n**What is the current behavior? (You can also link to an open issue here)**\nYou cannot switch to a newer version from an older version in the docs app.\n\n**What is the new behavior (if this is a feature change)?**\nFor docs app versions that contain this commit, switchting is possible. The docs app\nwill request the new versions-data.json file from the snapshot folder and fill the version switcher with\nthis data.\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- ~[] Tests for the changes have been added (for bug fixes / features)~\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\n\n**Other information**:\n\nWith this patch, the docs app will request available versions data from the snapshot,\nwhich are now stored in a separate versions-data.json file.\n\nThis only affects docs apps that contain this commit, so older doc apps\nwill still only display the versions up to their own version.\n",closed,false,2016-10-17T14:35:58.000Z,2016-10-19T13:02:50.000Z,2016-10-19T13:02:50.000Z,false,false,2,4,4,1,57,20,3,1," ",0,,0,,0,,2,"  ",0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,88556328,docs($controller): deprecate the use of $controllerProvider#allowGlobals,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**Does this PR introduce a breaking change?**\nputs the warning for a future one\n\nAnything else that needs to be done to prepare for removing this in 1.7?\n",closed,false,2016-10-08T19:25:42.000Z,2016-10-20T06:50:45.000Z,2016-10-20T06:50:44.000Z,false,false,4,3,3,1,6,3,3,1," ",0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,90046678,fix($compile): Cleanup attribute-binding observers,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nhttps://github.com/angular/angular.js/issues/15268\n\n**What is the new behavior (if this is a feature change)?**\nCleans up attributes observer on change.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n",closed,false,2016-10-19T16:36:58.000Z,2016-10-20T16:26:49.000Z,2016-10-20T16:26:49.000Z,false,false,1,2,1,5,34,1,2,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,1," The implementation looks good. The testcase doesn't seem to test the new change, though.\n\nOff the top of my head, you can exercise the appropriate path by having a controller that returns an object from its constructor. E.g. something like:\n\n``` js\nfunction TestController() {\n  return {\n    $onChanges: ...\n  };\n}\n\nTestController.prototype.$onChanges = ...\n```\n\nIn thie above case, both `$onChanges` functions should continue to get called without the fix. With your fix, only the returned one should continue to get called onve the controller is initialized.\n
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,90250145,docs(orderBy): Clarify behavior of default comparator,"Documentation updates to clarify default sort behavior. See\nhttps://github.com/angular/angular.js/issues/15293 for more information\n\n(These changes are slightly different than the ones in #15302, since I started from master rather than 1.3.x docs)\n",closed,false,2016-10-20T17:57:20.000Z,2016-10-25T21:05:09.000Z,2016-10-25T21:05:09.000Z,false,false,1,4,6,3,8,0,2,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,90309857,docs($rootScope.Scope): correct a typing error,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nI think it is a typing error.\nI wonder it is.\nreview this PR.\nthx.\n",closed,false,2016-10-21T01:35:31.000Z,2016-10-21T06:50:32.000Z,2016-10-21T06:50:32.000Z,false,,1,1,1,1,1,1,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,90161812,"fix+perf($parse): allow watching array/object literal values, disable deep watch for one-way bindings","I think this is a better alternative to #15274, but has a breaking change (which didn't break any tests!).\n\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix, perf\n\n**What is the current behavior? (You can also link to an open issue here)**\nWatching literals doesn't always work, literals passed to components are deep watched to work around this.\n\n**What is the new behavior (if this is a feature change)?**\nWatching literals now does a watch of the inputs.\n\n**Does this PR introduce a breaking change?**\nYES - see below or second commit\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\nBREAKING CHANGE (65ff861):\nPreviously when a literal value was passed into a directive/component via one-way binding it would be watched with a deep watcher.\n\nFor example, for `<my-component input=""[a]"">`, a new instance of the array would be passed into the directive/component (and trigger $onChanges) not only if `a` changed but also if any sub property of `a` changed such as `a.b` or `a.b.c.d.e` etc.\n\nThis also means a new but equal value for `a` would NOT trigger such a change.\n\nNow literal values use a non-deep watch similar to other directive/component one-way bindings. Changes are only trigger when the value itself changes.\n\nAvoiding deep watchers for array/object literals will improve watcher performance of all literals passed as one-way bindings, especially those containing references to large/complex objects.\n",closed,false,2016-10-20T09:18:37.000Z,2017-01-27T10:07:08.000Z,2017-01-27T10:07:08.000Z,false,false,2,5,3,4,149,9,4,0,,2," I think this looks good. I would like to see a test in `compileSpec.js` that demonstrates that we are no longer deep watching - just for the record. Great. Thanks @jbedard \r\nI will squash and merge. The first commit should probably be a `feat`, right? And I agree that it can go into 1.6",1," So I guess I shouldn't approve this since I have asked for two changes:\r\n\r\n* rename `deepWatch` local variable to `isLiteral`\r\n* add test to `compileSpec.js`",0,,0,,0,,0,,0,,1," I wonder how this change affects watching object literals with computed property names.",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,90688616,Changes test,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n",closed,false,2016-10-24T20:41:52.000Z,2016-10-26T16:53:43.000Z,2016-10-26T16:53:43.000Z,true,,0,21,49,2,3164,37,4,18,"                  ",0,,0,,0,,0,,0,,0,,0,,1," ",0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,91146114,chore(version-info): use branchPattern to check tag,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nWe have two fields in package.json for checking the current version:\n- branchVersion\n- branchPattern\n\nThe `branchVersion` field is used to work out what version to use in the\ndocs application, so we should not update this to the most recent version\nuntil that version is on the Google CDN. Otherwise the docs app will break.\n\nThe `branchPattern` is used to determine what branch we are currently\nworking from and is generally used as a gate-keeper to prevent invalid\nreleases from the wrong branch.\n\nThe `getTaggedVersion()` method was using the `branchVersion` to check\nthat the tagged commit was valid but this fails when we are moving to a\nnew minor version with release candidates.\n\nThis fix avoids the problem by doing a custom comparison against the\n`branchPattern` instead.\n",closed,false,2016-10-27T07:24:18.000Z,2016-10-27T08:19:56.000Z,2016-10-27T08:19:56.000Z,true,,1,4,4,1,6,1,1,2,"  ",0,,0,,0,,0,,0,,0,,0,,1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,91300344,style: Spelling fixes,"I understand that you want the commit to eventually have `style` as the type, I'm happy to roll up this series as a single commit w/ that as the main line.\n\nFor now, I'm more interested in feedback on the content of my commits.\n",closed,false,2016-10-27T23:41:08.000Z,2016-10-30T23:12:14.000Z,2016-10-29T15:40:21.000Z,true,,13,10,17,2,100,100,36,0,,0,,0,,0,,5,"     ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,5,"     ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,91379654,docs(CONTRIBUTING.md): add note about scope wildcard,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nno hint that `*` is a valid scope -- it hints you could omit the `(...)` bit, but most commits of late don't\n\n**What is the new behavior (if this is a feature change)?**\n\ndocumentation of `*`\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n",closed,false,2016-10-28T13:16:10.000Z,2016-11-01T14:35:20.000Z,2016-11-01T10:32:04.000Z,true,,3,1,1,1,2,0,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,91494986,docs(guide/Conceptual Overview): fix external api example,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nExample is broken in the snapshot because of changes to JSONP\n\n**Other information**:\n\nThe example will still be broken when opened in a plnkr, because they use the stable version instead of the snapshot.\n",closed,false,2016-10-29T16:58:22.000Z,2016-10-31T09:29:36.000Z,2016-10-31T09:29:28.000Z,true,,2,2,2,2,4,4,1,0,,0,,0,,0,,1," ",0,,0,,0,,1," BTW, I think we could just use `.get()` instead of `.jsonp()`.\n",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,91685389,docs(CONTRIBUTING.md): Updated commit types.,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the ""test"" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded ""test"" to also mean test fixes, added ""build"" and ""ci"".\r\nThis is to mirror the documentation in Angular (without JS) repo.",closed,false,2016-10-31T20:35:24.000Z,2016-11-17T21:17:42.000Z,2016-11-17T21:17:42.000Z,true,,6,2,2,1,3,2,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,91728310,perf(ngOptions): avoid calls to element.value,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nPerformance\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nIn some cases IE11/Edge calls to element.value are very slow when the element.value has not been set. Normally, these calls are usualy 0-3 ms but in these cases it can take 200-300 ms. This can easily add 3 or more seconds to the load time on a view that has 10 or more select tags using ngOptions.\r\n\r\nThe line this pull request is changing not only suffers from the performance issue described above but it also appears to be broken. The code is checking that option.value does not equal element.value but then sets element.value to option.selectValue. I don't believe option.value is actually defined anywhere and likely it was always intended to be option.selectValue. This means that check would always be true and since this code has been this way for quite a while and is causing a performance issue I've just removed the check. This way a call to element.value is never made prior to it's value being set.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n",closed,false,2016-11-01T03:57:51.000Z,2016-11-01T20:17:55.000Z,2016-11-01T10:42:54.000Z,false,,4,2,2,1,1,1,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,91778760,perf(*): don't trigger digests after enter/leave of structural directives,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nperf\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nStructural animations such as ngIf trigger an additional digest after $animate.leave completes\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n",closed,false,2016-11-01T12:58:13.000Z,2016-11-23T12:30:42.000Z,2016-11-23T12:30:41.000Z,true,,7,21,24,2,1140,976,8,0,,0,,0,,0,,9,"         ",0,,0,,0,,10," LGTM with the exception of one comment/question.\n         A couple of minor comments. LGTM otherwise.\n",1," ",1," An alternative, more radical approach (involving a BC) would be using `$$q` instead of `$q` for the `AnimateRunner` and let people manually call `$apply()` if their callback needs it. Most of the time, the animation callbacks trigger DOM-related operations/cleanup (and not touch on business logic or data), so a digest should not be necessary.\n\nUnfortunately, such a BC has to wait for 1.7 now 😞 \n
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,91835158,fix(security): do not auto-bootstrap when loaded from an extension.,"Extension URIs (`resource://...`) bypass Content-Security-Policy in Chrome and\r\nFirefox and can always be loaded. Now if a site already has a XSS bug, and uses\r\nCSP to protect itself, but the user has an extension installed that uses\r\nAngular, an attacked can load Angular from the extension, and Angular's\r\nauto-bootstrapping can be used to bypass the victim site's CSP protection.\r\n\r\nNotes:\r\n- `isAutoBootstrapAllowed` must be initialized on load, so that `currentScript`\r\n  is set correctly.\r\n- The tests are a bit indirect as reproducing the actual scenario is too\r\n  complicated to reproduce (requires signing an extension etc). I have confirmed\r\n  this to be working manually.",closed,false,2016-11-01T18:15:21.000Z,2017-01-09T08:04:57.000Z,2016-11-02T13:33:45.000Z,false,false,2,13,15,2,48,0,3,4,"    ",0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,6,"      ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,92156472,chore(docs-gen): create plnkr examples with the correct version,"**What is the current behavior? (You can also link to an open issue here)**\r\nCurrently, plnkrs are opened with the cdnVersion of the built docs app, which means\r\nthat snapshot plunkers might not work because they use the cdn (stable version).\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\nShould we update this info for the other deployments too?\r\n\r\n",closed,false,2016-11-03T13:48:28.000Z,2016-11-28T11:20:02.000Z,2016-11-05T12:18:49.000Z,true,,5,4,4,1,17,3,1,1," ",0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,92161660,fix($location): don't remove multiple slashes from urls,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n",closed,false,2016-11-03T14:15:45.000Z,2016-11-04T15:00:47.000Z,2016-11-04T13:53:20.000Z,false,false,1,9,10,1,22,13,2,5,"     ",0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,1," Looks good.\n",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,92355147,Location path 2,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsee the commit message\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nsee the commit message\r\n\r\n**Does this PR introduce a breaking change?**\r\nThe previous behaviour would have led to a broken app, so it is highly\r\nunlikely that any app relied on this behaviour. So this doesn't constitute\r\na breaking change.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nAlternative solution #15359\r\n",closed,false,2016-11-04T14:57:26.000Z,2016-12-14T19:54:10.000Z,2016-11-09T10:45:04.000Z,true,,5,7,7,2,38,10,3,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,92707551,docs(guide/Controllers): remove the word 'hides',"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nHiding a property and overriding a property seem to me fundamentally different things. I thought while reading that the '(hides)' did not offer any more clarification than just saying overrides, and caused me to pause unnecessarily to understand it.",closed,false,2016-11-08T03:06:51.000Z,2016-11-14T10:11:45.000Z,2016-11-14T10:11:45.000Z,false,false,5,2,2,1,3,3,1,1," ",0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,93239014,chore(docs): improve version picker,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nchore\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nVersions in the version picker are hard-coded into each build\r\nThis means that newer versions are never shown in older versions of the docs\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nNow the version information has split into the current and the list of all versions.\r\nIn the production deployment the version list is now read from the snapshot build, so we always\r\nget the latest list.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nReplaces #15381",closed,false,2016-11-10T21:58:00.000Z,2016-11-28T10:32:11.000Z,2016-11-15T12:13:16.000Z,true,,11,11,12,2,637,410,17,6,"      ",0,,0,,0,,1," ",0,,1," A few minor things that shold be clarified, otherwise I really like the solution. \n",0,,1," ",1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,93628353,Ng model options extend,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeat\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`ngModelOptions` cannot be inherited from ancestor `ngModelOptions`\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n`ngModelOptions` can inherit if specified via `$inherit` values\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nA small internal-ish change to the programmatic API for reading options.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2016-11-14T19:15:18.000Z,2016-11-16T13:47:11.000Z,2016-11-16T13:47:10.000Z,false,false,1,24,40,4,1170,1042,6,17,"                 ",0,,0,,0,,0,,0,,0,,0,,4,"    ",1," Fourth time's a charm :smiley:\nLGTM\n",2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,93725159,docs($compile): add double compilation known issue,,closed,false,2016-11-15T09:03:38.000Z,2016-11-23T12:52:48.000Z,2016-11-23T12:52:48.000Z,true,,5,11,24,6,113,0,2,0,,0,,0,,0,,6,"      ",0,,0,,0,,1," ",2," A couple of typos.\r\nLGTM otherwise 👍  LGTM (as soon as travis is happy)",2," We could also put that in the compiler guide (with a short note here in the API docs that double-compilation is not supported).\n
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,93998748,"WIP - docs(guide/migration): add ""Migrate 1.5 to 1.6"" section","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nNo migration docs for 1.5 -> 1.6.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nMigration docs for 1.5 -> 1.6.\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nThis needs to be updated with the changes that land on future RCs.",closed,false,2016-11-16T16:21:28.000Z,2016-11-21T11:59:42.000Z,2016-11-19T08:48:41.000Z,false,false,4,11,20,4,1132,4,2,6,"   looking good so far. A few comments\n   ",1," ",1," Some small changes. But once they are done let's merge this in.\n",0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,94065454,Ng model options fix,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2016-11-16T22:37:48.000Z,2016-11-17T23:39:25.000Z,2016-11-17T23:39:25.000Z,false,false,0,3,4,2,56,30,3,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM\n(My two comments are non-blocking, but good-to-have :smiley:)\n
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,93796863,chore(docs): deprecation notices for methods and properties,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nCloses #15351",closed,false,2016-11-15T16:15:15.000Z,2016-11-18T13:52:38.000Z,2016-11-18T13:52:38.000Z,false,false,10,8,11,4,2361,443,51,4,"    ",0,,0,,0,,1," ",0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,94171076,chore(*): cleanup msie handling; add support comments,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nN/A\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\n\r\n1. The conditions checking the msie variable value have been simplified.\r\nThere is e.g. no point to check if `msie <= 11` since there IE 12 won't ever\r\nexist.\r\n2. Edge UA-sniffing has been added to tests (only!) where appropriate\r\n3. Support comments for IE/Edge have been added.",closed,false,2016-11-17T13:54:17.000Z,2016-11-28T14:56:32.000Z,2016-11-23T14:42:40.000Z,false,false,2,11,14,3,62,21,17,0,,0,,0,,0,,0,,1," ",1," ",0,,2,"  ",1," LGTM\n",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,5,"     ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,94153279,chore(ngAnimate): cleanup vendor prefixes handling in tests,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n-webkit-prefixed rules are sometimes added manually in ngAnimate tests and sometimes not accounted for at all.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n`ss.addPossiblyPrefixedRule` is used where applicable, automatically handling the `-webkit-` prefix. Manually added prefixes have been removed.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\n\r\n1. Change all transition/transform/animation-related ss.addRule to\r\n   ss.addPossiblyPrefixedRule to account for the -webkit- prefix.\r\n2. Remove manually added -webkit-prefixed rules in favor of automatically\r\n   handling them in ss.addPossiblyPrefixedRule.",closed,false,2016-11-17T11:55:19.000Z,2016-11-23T13:31:00.000Z,2016-11-23T13:30:56.000Z,false,,2,1,0,1,77,100,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM\n
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,94592992,feat(ngModel): add `$overrideModelOptions` support,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeature\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nno obvious way to programmatically change model options for an ngModel directive\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nAdds `$overrideModelOptions` method\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n",closed,false,2016-11-21T10:56:35.000Z,2017-02-01T12:21:09.000Z,2017-02-01T12:20:42.000Z,true,,1,3,5,0,0,0,0,1," ",0,,0,,0,,0,,0,,0,,0,,1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,94911791,fix(select): let ngValue take precedence over option text with multip…,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an option contains multiple interpolations, an ngValue on the option element is ignored. See #15413\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)",closed,false,2016-11-22T22:32:39.000Z,2016-11-23T12:27:41.000Z,2016-11-23T12:27:41.000Z,true,,0,1,0,1,81,9,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM as soon as travis is green
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95095203,feat(security): explicitly whitelist URL schemes for bootstrap.,"Many browsers have some extension URL scheme. It is unclear how many of\r\nthose have the security issue of allowing parser-inserted loads of\r\nextension URLs.\r\n\r\nTo be conservative, this code whitelists the URL schemes that are known\r\nto be subject to CSP, i.e. the ones that are expected and safe.\r\n\r\nNote: there is no change in tests as behavior does not change for any known URL.",closed,false,2016-11-23T23:23:20.000Z,2016-11-23T23:44:46.000Z,2016-11-23T23:44:43.000Z,true,,1,3,2,1,13,5,1,0,,1," Lgtm",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95101784,feat(security): do not bootstrap from unknown schemes with a different origin,Follow-up to #15427. There is no reason for allowing cross-origin automatic bootstrapping at URLs with an unknown scheme.\r\n\r\n@mprobst @petebacondarwin,closed,false,2016-11-24T00:52:56.000Z,2016-12-15T15:34:15.000Z,2016-12-01T11:30:50.000Z,false,false,24,10,7,1,40,4,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95228993,feat(minErr):  set max depth for angular error JSON stringify,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nhttps://github.com/angular/angular.js/issues/15402\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\ncloses #15402",closed,false,2016-11-24T21:29:29.000Z,2017-02-08T17:08:30.000Z,2017-02-08T17:08:30.000Z,false,false,9,24,49,1,189,24,9,3,"   ",0,,0,,0,,0,,0,,0,,0,,6,"      ",1," ",5," On a high level it looks good. Still missing:\r\n\r\n1. Tests.\r\n2. Making the max depth configurable. I left some comments for things that need to change imo. In addition to them, we also need test for `serializeObject`/`toDebugString`.\r\n\r\n##\r\nNote to self:\r\nIf we update `minErr`, we also need to update [ng-closure-runner/minErr][1] (and release and use new version in `angular.js`). \r\n\r\n[1]: https://github.com/angular/ng-closure-runner/blob/master/src/minErr.js  Almost done :smiley: We discussed this during the team meeting. I suggested two minor changes and then this willbe good to go.",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,9,"         ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95285192,docs(*): document the breaking change introduced in e1da4be,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nAlthough e1da4be introduced a breaking change, it wasn't documented as such.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe breaking change is documented.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n<sub>(In a way. ""Let me introduce you this breaking change. It has been around for 2 releases, but I don't think you've met.)""</sub>\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)",closed,false,2016-11-25T10:54:09.000Z,2016-11-25T11:40:16.000Z,2016-11-25T11:38:50.000Z,true,,2,3,3,2,69,3,2,2,"  ",0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95323424,chore(*): use Yarn for dependency management,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2016-11-25T15:53:26.000Z,2016-11-29T14:31:13.000Z,2016-11-29T14:31:13.000Z,true,,10,44,65,15,6998,26946,69,16,"                ",0,,0,,0,,0,,0,,0,,0,,11," :tada: BTW, we also need to update `docs/content/misc/contribute.ngdoc`. Added a few more nits :smiley:         ",2," A couple of minor comments/questions.\r\nLGTM LGTM",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,10,"          ",1," ",2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95385482,chore(*): silence ng-closure-runner warnings during `grunt minall`,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore/Refactor.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDuring the `grunt minall` task, `ng-closure-runner` logs some warnings due to:\r\n1. Throwing errors that do not seem to be `minErr` instances.\r\n2. A `@this` annotation in a non-JSDoc comment. \r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nNo warnings during `grunt minall`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n",open,false,2016-11-26T22:42:31.000Z,2017-06-29T14:35:16.000Z,,false,,0,1,1,1,53,7,10,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95383552,chore(docs): use correct script-URL for plnkr on snapshot,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix (for docs app).\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe URLs used for scripts when opening an example from the snapshot version in plnkr is incorrect and the code does not work.\r\nSee #15437.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe correct script URLs are used and the examples work.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15437",closed,false,2016-11-26T21:22:34.000Z,2016-11-30T11:54:01.000Z,2016-11-28T10:16:28.000Z,false,,1,5,5,2,2,2,1,1," ",0,,0,,0,,2,"  ",0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95395120,docs($rootScope): add note about watching File objects,- Add note recommending against watching `File` objects with deep watchers\r\n\r\nThis should address #14352,closed,false,2016-11-27T07:36:31.000Z,2016-11-28T17:52:34.000Z,2016-11-28T17:51:40.000Z,false,false,2,2,2,1,2,0,1,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95792391,chore(doc-gen): render @example tag for ngdoc @method,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat / fix to the docs app\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`@example` in  `@method` is not rendered\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n",closed,false,2016-11-29T22:48:34.000Z,2016-12-01T15:11:25.000Z,2016-12-01T15:11:25.000Z,true,,0,2,1,1,8,1,2,0,,0,,0,,0,,1," ",0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95873153,docs(error/areq): describe your change...,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs Update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nImproving the error doc with more appropriate error message.\r\nImproving the error message for ng:areq with more details and examples.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAdded more examples\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nImproving the error message for ng:areq with more details and examples.",closed,false,2016-11-30T11:23:49.000Z,2016-12-01T11:41:42.000Z,2016-12-01T11:41:42.000Z,false,,2,2,2,1,29,0,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,96063342,test($compile): work around Chrome issue with reported size for `<foreignObject>`,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFixes two (potential) test failures on Chrome 53-57+.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n[These tests][1] can fail on Chrome, because the **reported** size of the inner divs is subject to global display settings (e.g. font size) and browser settings (e.g. default zoom level).\r\nSee also #15333.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe assertions are now more robust by comparing against the size of the equivalent, hand-written SVG instead of fixed widths/heights.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15333\r\n\r\n[1]: https://github.com/angular/angular.js/blob/f1db7d735b475a7954023cc63f2b3f0ef685ea7e/test/ng/compileSpec.js#L445-L469",closed,false,2016-12-01T10:37:41.000Z,2016-12-01T12:53:51.000Z,2016-12-01T12:30:51.000Z,false,,4,2,2,1,54,14,1,1," ",0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95975035,fix(ngOptions): ignore comment nodes when removing 'selected' attribute,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix (regression)\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an empty option has ngIf on it in an ngOptions select, and the ngIf expression is false, then\r\nan error is thrown, because we try to remove the ""selected"" attribute from the ngIf comment node.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n~The logic is different in master, and the bug should not be happening there.~ The same bug exists on master\r\n",closed,false,2016-11-30T21:14:47.000Z,2016-12-02T17:20:44.000Z,2016-12-02T17:20:44.000Z,true,false,3,1,1,3,124,6,2,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,77280966,fix($resource): allow params in `hostname` (except for IPv6 addresses),"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix (regression).\n\n**What is the current behavior? (You can also link to an open issue here)**\nParams inside the `hostname` part of a URL are ignored.\nSee #14542.\n\n**What is the new behavior (if this is a feature change)?**\nParams inside the `hostname` part of a URL are not ignored (except if the `hostname` is a `[...]` enclosed IPv6 address).\n\n**Does this PR introduce a breaking change?**\nHardly.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\nSupport for IPv6 addresses (in b643f0d) was too aggressive and broke support for params in the\n`hostname` part of a URL.\nThis commit restores support for params in the `hostname`, as long as it is not an IPv6 address.\n\nFixes #14542\n",closed,false,2016-07-13T12:37:43.000Z,2016-12-03T08:04:00.000Z,2016-12-03T08:01:14.000Z,false,false,6,2,2,2,34,10,2,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,96068113,fix(ngOptions): ignore comment nodes when removing 'selected' attribute,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix (regression)\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an empty option has ngIf on it in an ngOptions select, and the ngIf expression is false, then\r\nan error is thrown, because we try to remove the ""selected"" attribute from the ngIf comment node.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n",closed,false,2016-12-01T11:07:26.000Z,2016-12-02T17:48:49.000Z,2016-12-02T17:48:49.000Z,true,,1,4,4,1,131,11,3,1," ",0,,0,,0,,2,"  ",0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,96088471,chore(docs): don't use bower for docs dependencies,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nchore\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDocs app uses bower\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nNo use of bower in the docs application\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n",closed,false,2016-12-01T13:28:25.000Z,2017-01-30T14:10:47.000Z,2017-01-30T14:10:46.000Z,true,,3,2,1,1,42,42,10,0,,0,,0,,0,,1," ",0,,0,,0,,0,,1," LGTM",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,96327928,feat($compile): support expansion of special `ngBindon` attributes,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeat\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nSupporting unidirectional data-flow is rather verbose\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nSupporting unidirectional data-flow is less verbose\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNope\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\nIn order to reduce some of the verbosity associated with conforming to the\r\nideas behind unidirectional data-flow, we can introduce a special\r\nattribute syntax that will be automatically expanded in order to simulate\r\ntwo-way data binding.\r\n\r\nFor example,\r\n\r\n`<my-component ng-bindon-foo=""bar"">` will be expanded into\r\n`<my-component foo=""bar"" foo-changed=""bar = $event"">`\r\n\r\nFixes #15455",open,false,2016-12-02T18:21:59.000Z,2017-06-29T14:33:56.000Z,,false,,11,1,3,1,61,6,3,0,,0,,0,,0,,0,,0,,0,,0,,1," I like `ng-bindon-` better, because it matches ng2's `bindon-` pretty closely (but maybe it is too close
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,96410510,fix(select): do not break when removing the element (e.g. via `ngIf`),"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen removing `<option>` elements, we schedule some operations on the `ngModelCtrl`. For performance reasons, these operation are scheduled to be run as a post-digest operation. If the `<select>` element happens to be removed as well (and its scope destroyed), an error may be thrown due to certain values not being available on the `$scope`.\r\nSee #15466.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nNothing breaks.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15466.",closed,false,2016-12-03T21:00:34.000Z,2016-12-06T11:04:21.000Z,2016-12-06T10:48:05.000Z,false,false,7,3,3,2,17,1,2,1," ",0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,38181892,Add hasBody to ngResource action configuration,"The use of hasBody would allow developers of REST interfaces to decide if a request body is necessary or not on a per method basis.\n\nThe way ngResource currently handles request bodies in custom requests make the definition of custom requests pretty useless. It’s not possible to transfere a request body through a  other requests than POST, PUT, PATCH. Or am I wrong?\n\nIt may be true that some browser implementations are also brocken when it comes to methods like DELETE but this broken behavior should not be enforced by angular.\n\nEven as i read the https://github.com/angular/angular.js/issues/3207 after creating the patch its somehow picking up pmariduenas comment on creating a enableDeleteRequestBody. Its just the generic version for all custom requests.\n",closed,false,2015-06-21T09:50:33.000Z,2017-03-21T10:47:14.000Z,2017-03-21T10:46:26.000Z,false,,26,18,20,10,73,1,2,0,,0,,0,,0,,0,,0,,0,,0,,7,"       ",1," ",4," We also need tests for this. We also need a test for POST/PUT/PATCH methods with `hasBody: false`.  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,6,"      ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,96921833,Clarify where ngDisabled should be used,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nUpdate documentation.\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nn/a\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nn/a\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nMy understanding is that ngDisabled is for form elements only so I propose that the documentation reflect this more clearly.",closed,false,2016-12-07T13:19:41.000Z,2017-01-25T19:15:49.000Z,2017-01-25T19:15:48.000Z,false,false,8,4,4,1,1,1,1,0,,0,,0,,0,,2,"  ",0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,97084906,fix(jqLite): silently ignore `after()` if element has no parent,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe element was always assumed to have a parent and an error was thrown when that was not the case.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\njqLite is now consistent with jQuery, which silently ignores a call on elements that do not have a parent.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo. (This change only affects already broken code, that would otherwise throw an error.)\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15331\r\nCloses #15367",closed,false,2016-12-08T09:20:40.000Z,2016-12-08T16:13:41.000Z,2016-12-08T16:13:39.000Z,false,,0,6,5,3,16,5,2,0,,0,,0,,0,,1," ",1," ",1," ",0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,97309227,refactor(*): replace `HashMap` with `NgMap`,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRefactoring.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSame old, same old!\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n`HashMap` is replaced with `NgMap`, which for the time being points to `NgMapShim`, an API-compatible `Map` implementation (for the features Angular needs). This will allow us to easily switch to native implementations once they become more stable.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nSee #13209 and #15114 for related discussions.",closed,false,2016-12-09T13:28:21.000Z,2017-04-27T11:50:28.000Z,2017-01-25T21:57:16.000Z,false,false,8,10,10,3,213,166,16,0,,0,,0,,0,,1," ",0,,0,,0,,5,"     ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,97375160,docs(ngMessageExp): Better description,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nngMessageExp has the same description as ngMessage\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nUpdated description\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nOld description was copied over from ngMessage.",closed,false,2016-12-09T20:31:01.000Z,2016-12-11T19:02:47.000Z,2016-12-11T19:02:47.000Z,false,false,1,1,2,2,2,4,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,97471459,fix(ngModelOptions): work correctly when on the template of `replace` directives,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nIn order for `ngModel` and `ngModelOptions` to work correctly together, the latter's pre-linking function should be run before the former's pre-linking function. This is typically what happens, except when `ngModel` is used on an element which also has a `replace` directive, whose template includes `ngModelOptions`. In that case, the order is reversed.\r\nSee #15492 for more details.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe initialization logic of `ngModelOptions` is moved from its pre-linking function to its controller's `$onInit()` lifecycle hook. This way, it is always guaranteed to be run before `ngModel`'s pre-linking function, even in the `replace` scenario mentioned above. \r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nMaybe.\r\nThere is no breaking change wrt 1.5.x (where the initialization of `ngModelOptions` used to take place in the controller itself), but wrt to 1.6.0 the following usecase will no longer be possible:\r\nA sibling directive to `ngModelOptions`, let's call it `foo` could be modifying the model options definition (e.g. `ng-model-options=""modelOptionsDefinition""`) in its `$onInit()` lifecycle hook. If the `foo` directive had a lower priority that `ngModelOptions`, then it will no longer work after this PR, since its `$onInit()` method will be called _after_ `ngModelOptions` is initialized. \r\n(This can be worked around by changing the priority of `foo` to be higher than `ngModelOptions` or by overwriting `ngModelOptions#$options` from `foo#$onInit()`.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15492.",closed,false,2016-12-11T20:30:20.000Z,2016-12-12T22:15:19.000Z,2016-12-12T22:10:51.000Z,false,false,1,3,3,3,705,669,3,0,,2," One minor naming suggestion but LGTM.\r\nGood fix @gkalpak  ",0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,97640174,fix($rootScope): correctly propagate async changes after local `$digest()`,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nIf an async task is scheduled (via `$evalAsync()`) on a scope and `$digest()` happens to be called on another, unrelated scope (local digest), then the `asyncQueue` will be drained but `$rootScope.$digest()` will not be called (potentially preventing the changes to propagate correctly through the app).\r\nSee #15127.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAngular keeps track on whether `$digest()` has been called on `$rootScope` or not and calls `$rootScope.$digest()` if necessary (even if the `asyncQueue` has been drained by a local `$digest()`).\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nThis is a more targeted alternative to #15494.\r\nFixes #15127.",closed,false,2016-12-12T21:46:20.000Z,2016-12-13T22:06:45.000Z,2016-12-13T09:57:27.000Z,false,,1,2,2,1,27,1,2,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,97728322,docs($interval): improve fn description,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update:\r\n\r\nIf no arguments were specified, angular passes the current iteration to the funtion ([here](https://github.com/angular/angular.js/blob/ec565ddd9c536aa7f7441e89f03ea08e23de1a42/src/ng/interval.js#L171))\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] Docs have been added / updated (for bug fixes / features)\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n",closed,false,2016-12-13T11:01:08.000Z,2017-02-03T11:46:26.000Z,2016-12-13T12:16:40.000Z,false,,0,3,2,0,0,0,0,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,97166692,fix(ngOptions): do not unset the `selected` property unless necessary,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen updating the value of a `select[multiple]` element, all options are first set to `selected = false` and then the selected ones are set to `true`. By setting an already selected option to `selected = false` and then `true` again - essentially unselecting and reselecting it - causes some browsers (including Firefox, IE and under some circumstances Chrome) to unexpectedly scroll to the last selected option.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe `selected` property of the `<option>` elements is only set if its current value is different than the new one and even then it is set to its final value at once (i.e. without first setting it to `false`), thus avoiding the undesirable behavior.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15477",closed,false,2016-12-08T17:33:48.000Z,2016-12-19T20:58:42.000Z,2016-12-19T20:50:47.000Z,false,,2,2,2,2,98,9,2,0,,0,,0,,0,,1," ",0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,98474426,docs(guide/Migrating from Previous Versions): improve grammar in jque…,"…ry docs\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nBad grammar\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nBetter grammar \r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2016-12-18T13:24:55.000Z,2016-12-19T22:56:03.000Z,2016-12-19T15:16:28.000Z,false,false,4,1,1,2,1,1,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,98299145,fix(ngAnimate): correctly animate transcluded clones with `templateUrl`,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`$animate` decides whether an animation should be cancelled based on some assumption that don't hold in specific cases (e.g. when animating transcluded clones with `templateUrl` directives on them for the first time). As a result, the entering elements will not be animated in such cases. This affects commonly used, structural built-in directives (`ngIf`, `ngRepeat`, `ngSwitch` etc).\r\nSee also #15510.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAll entering animations work as expected (from the first time).\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nBTW, I believe this is a side effect of lazily compiling transcluded content.\r\n\r\nIn addition to the last `fix` commit that fixes the bug, this PR also includes several `refactor` commits that simplify `$animate` internally, mainly by removing unnecessary wrapping/unwrapping of DOM nodes in `jqLite`/`jQuery` collections. This changes may also positively affect performance, especially in animation-heavy apps (~~although I haven't benchmarked it - yet~~ it does indeed :wink:).\r\n(It is probably easier to review one commit at a time.)\r\n\r\nParty addresses #14074 and #14124.\r\n\r\nFixes #15510.\r\n",closed,false,2016-12-16T09:03:26.000Z,2017-01-24T22:11:36.000Z,2017-01-24T21:55:59.000Z,false,false,5,16,18,10,230,119,6,0,,0,,0,,0,,2,"  ",0,,0,,0,,7,"       ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,5,"     ",1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,77598906,fix($animate): improve detection and handling of invalid `classNameFilter` RegExp,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix.\n\n**What is the current behavior? (You can also link to an open issue here)**\n1. `$animateProvider` fails to detect several invalid `classNameFilter` RegExps.\n2. Even if a `classNameFilter` RegExp is detected as invalid, `$animateProvider` will still use it (despite printing an error message saying that it _is prohibited_).\n\n**What is the new behavior (if this is a feature change)?**\n1. `$animateProvider` does a better job detecting invalid `classNameFilter` RegExps (it is still not perfect though).\n2. If a `classNameFilter` RegExp is detected as invalid, `classNameFilter` will be reset to `null` (to avoid using an invalid RegExp).\n\n**Does this PR introduce a breaking change?**\nNo (unless someone was hacking around the previous implementation in order to allow invalid RegExps - which they shouldn't do anyway).\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n<sub>This PR contains two separate commits - which fix two different things - so that they can be liked/disliked independently.</sub>\n",closed,false,2016-07-15T11:03:21.000Z,2017-04-27T11:54:02.000Z,2017-02-17T09:29:30.000Z,false,false,4,1,7,4,47,25,3,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,98704102,docs(CHANGELOG): fix typo,Fix fixes an incorrect Markdown syntax in the CHANGELOG file.,closed,false,2016-12-20T08:18:59.000Z,2016-12-20T08:52:04.000Z,2016-12-20T08:32:17.000Z,false,,0,2,2,1,1,1,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,98656845,"Add traceback to unhandled promise rejections, Fixes: #14631","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nConsole is filled with meaningless:  `Possibly unhandled rejection: {}` errors\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nConsole is filled with juicy traceback info.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI don't think so\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:",closed,false,2016-12-19T23:04:57.000Z,2016-12-21T19:15:04.000Z,2016-12-21T19:13:17.000Z,false,false,20,21,24,1,95,40,2,0,,0,,0,,0,,0,,0,,0,,0,,1," ",2," A couple of nitpicks, but otherwise LGTM. LGTM, but let's wait for some feedback from others as well.\r\n<sub>(In the mean time, feel free to fix up that commit message :grin:)</sub>",1," I left some comments, but the general idea LGTM.",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,6,"      ",1," ",1," ",0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,8,"        ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,98754927,fix($$cookieReader): safe get cookie,"Return an empty string when an error is catched while getting cookie.\r\n\r\nCloses #15523\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nhttps://github.com/angular/angular.js/issues/15523\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2016-12-20T14:08:48.000Z,2016-12-20T21:39:49.000Z,2016-12-20T21:33:30.000Z,false,false,6,1,0,1,36,1,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,99149407,Fix issue: 15536,"This PR only demonstrates a fix, it still needs for someone to add tests.\r\n\r\nCloses #15536",closed,false,2016-12-22T18:27:23.000Z,2017-01-11T17:22:50.000Z,2016-12-22T18:36:34.000Z,false,,1,1,1,1,1,1,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,99132617,feat(isArray): make angular.isArray support Array subclasses,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeature\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nAngular doesn't recognise objects prototypically inherited from `Array.prototype` as arrays.\r\nSee #15533\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIn particular, this change gets Angular to play nicely with MobX observable arrays. \r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nYes. `angular.isArray` is used throughout Angular. In particular, after this change, `angular.copy` will use the array-cloning logic for objects prototypically inherited from `Array.prototype` whereas now it uses the object-cloning logic for them. This, in turn, affects deep watchers and other parts of the framework that use `angular.copy`.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n",open,false,2016-12-22T16:32:30.000Z,2017-06-29T14:32:36.000Z,,false,,5,6,6,1,15,4,2,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",1," LGTM (for 1.7.x)\r\nCould you expand the BC notice a little to explain what other things might be affected (apart from direct `angular.isArray(...)`)? E.g. watchers, `copy`ing etc.",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,99194173,docs(guide/Forms): update an old example to remove gender bias,Removing implicit bias from an example. Docs-only PR. @petebacondarwin \r\n,closed,false,2016-12-23T01:35:27.000Z,2016-12-23T14:35:27.000Z,2016-12-23T09:44:34.000Z,false,,0,1,0,1,2,2,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,99967347,fix(angularInit): allow auto-bootstraping from inline script,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSome browsers (e.g. Safari 9.x, PhantomJS) do not set `link.origin/protocol` correctly, when setting `link.href` to `null`, which prevents auto-bootstraping Angular from scripts without a `src` attribute (i.e. inline scripts).\r\nSee also #15567.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAuto-bootstraping Angular from inline scripts is allowed.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nInline scripts are on the same origin as the loading page, so auto-bootstraping\r\nshould be allowed.\r\n\r\nFixes #15567.",closed,false,2017-01-03T15:04:07.000Z,2017-01-03T17:26:36.000Z,2017-01-03T17:24:09.000Z,false,false,1,2,0,1,29,4,2,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,61332699,fix(ngRoute): make route.resolve count as a pending request,"- **What kind of change does this PR introduce?** (Bug fix, feature, docs update, ...)\n\nMake angular count pending [`resolve`](https://github.com/angular/angular.js/blob/master/src/ngRoute/route.js#L96) values as pending request, for the purposes of making `whenStable` more accurate.\n- **What is the current behavior?** (You can also link to an open issue here)\n\nCurrently, if someone uses promises to asynchronously set a `resolve`, this is not counted as a pending request.  The result is that callbacks to `whenStable` can be invoked before these variables are available.  This was causing protractor users problems (see https://github.com/angular/protractor/issues/789#issuecomment-190983200 for details)\n- **What is the new behavior (if this is a feature change)?**\n\nWaiting for these variables now counts as a pending request.\n- **Does this PR introduce a breaking change?**\n\nI guess you could imagine a breaking change where someone wanted a `whenStable` callback to be invoked before the variables resolved.\n- **Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\nNot sure tests are necessary for such a small change.  And since this brings behavior in line with user expectations not sure about the docs either.\n- **Other information**:\n",closed,false,2016-03-02T00:26:00.000Z,2017-01-11T22:15:40.000Z,2017-01-11T22:15:40.000Z,false,false,18,15,28,1,308,9,6,0,,0,,0,,0,,0,,0,,0,,0,,4,"    ",1," ",2," I left some comments. We also miss an e2e test.\r\n<sub>(@sjelin, feel free to ping me if you need any help.)</sub> While taking another look, I realized that `ngRoute` has one more async feature (that might not be there when this PR was first created) which is worth taking into account: `resolveRedirectTo`\r\n\r\nBasically, it is possible to decide about a redirection asynchronously (possibly after some delay). It sounds reasonable to take that delay into account too.\r\n\r\nThus, I suggest expanding the outstanding request increment/decrement ""scope"" to [this block][1], instead of just around `resolveLocals`. Maybe something like:\r\n\r\n```js\r\nfunction decrementRequestCount() {\r\n  $browser.$$completeOutstandingRequest(noop);\r\n}\r\n\r\n...\r\n\r\n$browser.$$incOutstandingRequestCount();\r\n\r\nnextRoutePromise.\r\n  then(getRedirectionData).\r\n  then(handlePossibleRedirection).\r\n  then(function(keepProcessingRoute) {\r\n    return keepProcessingRoute && nextRoutePromise.\r\n      then(resolveLocals).\r\n      then(function(locals) {\r\n        // after route change\r\n        if (nextRoute === $route.current) {\r\n          if (nextRoute) {\r\n            nextRoute.locals = locals;\r\n            angular.copy(nextRoute.params, $routeParams);\r\n          }\r\n\r\n          $rootScope.$broadcast('$routeChangeSuccess', nextRoute, lastRoute);\r\n        }\r\n      });\r\n  }).\r\n  catch(function(error) {\r\n    if (nextRoute === $route.current) {\r\n      $rootScope.$broadcast('$routeChangeError', nextRoute, lastRoute, error);\r\n    }\r\n  }).\r\n  finally(decrementRequestCount);\r\n```\r\n\r\nWDYT, @sjelin?\r\n\r\n[1]: https://github.com/sjelin/angular.js/blob/3fa796fc566658e2e71c71ab3c9d13a12268de76/src/ngRoute/route.js#L686-L706",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,8," I like the idea of expending the scope of this change to include `resolveRedirectTo`, but I'm not sure how to handle the following race condition:\r\n\r\n\r\n1. A route uses `resolveRedirectTo`, causing `$$incOutstandingRequestCount` to be called\r\n2. Protractor queries for stability, getting enqueued by `whenStable`\r\n3. `resolveRedirectTo` resolves to a new route, thereby calling `$$completeOutstandingRequest`, and thereby calling  the `whenStable` callbacks.  Protractor will get the signal in a few milliseconds, since it takes time for things to go through the selenium server \r\n4. The new route uses `resolve`\r\n5. Protractor, thinking the page is stable, executes some webdriver commands commands even though `resolve` has not yet resolved\r\n6. `resolve` resolves, but too late       ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,100127129,refactor($interpolate): remove unnecessary else,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nCleaner code.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-01-04T14:50:05.000Z,2017-01-05T12:57:57.000Z,2017-01-05T12:57:57.000Z,true,,6,2,2,2,2,4,1,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,99760290,fix($location): correctly handle external URL change during `$digest`,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix(es).\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n1. `$browser.$$checkUrlChange()` (which was run before each `$digest`) will only detect an external change (i.e. not via `$location`) to the browser URL. External changes to `history.state` will not be detected and propagated to `$location`.\r\n\r\n   This would not be a problem if changes were followed by a `popstate` or `hashchange` event (which would call `cacheStateAndFireUrlChange()`). But since `history.pushState()/replaceState()` do not fire any events, calling these methods manually will result in `$location` getting out-of-sync with the actual\r\nhistory state.\r\n\r\n   This is not detected in tests, because the mocked `window.history` will incorrectly trigger `popstate` when calling `pushState()/replaceState()`, which ""covers"" the bug.\r\n\r\n2. When the URL is changed directly (e.g. via `location.href`) during a `$digest` (e.g. via `scope.$evalAsync()` or `promise.then()`) the change is not handled correctly, unless a `popstate` or `hashchange` event is fired synchronously.\r\n\r\n   This is an issue when calling `history.pushState()/replaceState()` in all browsers, since these methods do not emit any event. This is also an issue when setting `location.href` in IE11, where (unlike other browsers) no `popstate` event is fired at all for hash-only changes ([known bug][1]) and the `hashchange` event is fired asynchronously (which is too late).\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n1. The first bug is fixed by ensuring `cacheState()` is always called, before looking for and propagating a URL/state change.\r\n\r\n2. The second bug(s) is fixed by:\r\n   1. Keeping track of `$location` setter methods being called and only processing a URL change if it originated from such a call. If there is a URL difference but no setter method has been called, this means that the browser URL/history has been updated directly and the change hasn't yet been propagated to `$location` (e.g. due to no event being fired synchronously or at all).\r\n   2. Checking for URL/state changes at the end of the `$digest`, in order to detect changes via `history` methods (that took place during the `$digest`).\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n<sub>Who k</sub>**NO**<sub>ws?</sub>\r\n(This PR fixes some uncommon usecases, but I am not 100% sure it was not possible to somehow ""exploit"" the bugs to support a usecase that is now broken.)\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #11075, #12571 and #15556.\r\n\r\n[1]: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/3740423/",closed,false,2016-12-30T15:29:51.000Z,2017-05-12T08:45:38.000Z,2017-01-09T22:02:59.000Z,false,,5,1,0,2,124,42,4,0,,1," This sounds like a reasonable change.\r\nThe fact that the tests were artificially hiding the real behaviour was worrying (probably my fault).\r\nAre we concerned that we now need a digest for the location to be updated - or was it the case that this was just broken completely previously, so waiting for a digest is a step forward
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,77600325,feat($animate): add support for `customFilter`,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFeature.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit adds a new `customFilter()` function on `$animateProvider` (similar to `classNameFilter()`), which can be used to filter animations (i.e. decide whether they are allowed or not), based on the return value of a custom filter function.\r\nThis allows to easily create arbitrarily complex rules for filtering animations, such as allowing specific events only, or enabling animations on specific subtrees of the DOM etc.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nFixes #14891.\r\n\r\nNeeds docs:\r\n- [x] Complete the API docs.\r\n- [x] Update the Developer Guide.\r\n",closed,false,2016-07-15T11:16:29.000Z,2017-04-28T09:54:09.000Z,2017-04-28T09:52:37.000Z,false,,8,12,19,6,498,223,4,0,,0,,0,,0,,1," ",1," ",3,"   Just two smaller docs changes needed, otherwise LGTM",0,,7,"       ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,100690532,WIP - feat($route): wait for resolves,Based on #14159. Just triggering CI.,closed,false,2017-01-09T14:07:55.000Z,2017-01-10T13:38:22.000Z,2017-01-10T09:50:30.000Z,false,false,3,1,2,2,159,12,6,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," I'm cool with your version or my version.  But if you want to stick with this PR, you'll have to add unit tests for `resolveRedirectTo`",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,100891233,docs($log): describe your change...,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocument update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe documentation for $log doesn't mention blackboxing, by which a developer can see the originating line of calls to $log.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nA brief, browser-agnostic mention of blackboxing was added to the page.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-01-10T15:10:47.000Z,2017-06-30T10:08:24.000Z,2017-06-30T09:58:31.000Z,true,,4,4,4,2,8,0,1,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,100979386,"fix($compile): allow the usage of ""$"" in isolated scope property alias","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen using an alias for an isolated scope property using ""$"" as part of the alias, the $compile throws an exception\r\n\r\n> Error: [$compile:iscp] Invalid controller bindings definition for directive 'foo'. Definition: {... factory: '<$fooFactory' ...}\r\n\r\nFixes: #15586\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit removes the error by changing the regex to allow zero or one ""$"" character both at the beginning and the end of the alias.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-01-11T00:08:14.000Z,2017-01-11T11:37:10.000Z,2017-01-11T09:45:48.000Z,false,false,0,4,2,0,0,0,0,0,,1," LGTM",0,,0,,0,,0,,0,,0,,0,,1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,101075345,fix($compile) : Add base#href to the list of RESOURCE_URL context attrs,"This will put the same security constraints to bindings on base#ref as on iframes or script srcs, since it changes the behavior of relative URLs across the page. Currently, they don't have a $sce context. Also, it's more generally a good idea in Angular itself, as since #15144 and its fix #15145 we'll consider that baseURI as a trusted origin.\r\n\r\n**Does this PR introduce a breaking change?**\r\nYup: something like `<base href=""{{myUrl}}""/>` will send myUrl to the $sce's RESOURCE_URL checks. By default, it will break if myUrl isn't same-origin. Also, concatenation in trusted contexts is disabled: ""/{{myPathComponent}}/something"" won't work at all.\r\n\r\nThis follows the discussion in #15537 and the initial issue in #15144, fixed in #15145.",closed,false,2017-01-11T14:24:05.000Z,2017-01-18T10:44:26.000Z,2017-01-18T10:44:26.000Z,false,false,2,2,0,1,20,1,3,0,,1," LGTM",0,,0,,0,,0,,0,,0,,0,,1," LGTM, but the commit message needs a proper breaking change notice
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,101225639,fix(ngMockE2E): ensure that mocked $httpBackend uses correct $browser,"The fix from #13124 enabled ngMock and ngMockE2E to work together but\r\ndid it in a way that meant that the ""real"" `$httpBackend` service that\r\nwas used in pass-through depended upon a different `$browser` service\r\nto the rest of the app.\r\n\r\nThis broke Protractor since it watches the `$browser` for outstanding\r\nrequests and the pass through requests were being tracked by the wrong\r\n`$browser` instance.\r\n\r\nCloses #15593\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-01-12T09:47:41.000Z,2017-01-12T11:00:02.000Z,2017-01-12T11:00:02.000Z,true,,0,5,5,1,22,9,2,3,"   ",0,,0,,0,,0,,0,,0,,0,,1," ",1," LGTM",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,101354406,fix(ngValue): setting binding to undefined should update the DOM value to an empty string,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSetting the binding to undefined calls jqLite/jQuery's `prop()` function, passing undefined as the second argument: `element.prop('value', undefined)`.\r\nThis is identical to `element.prop('value')` and will retrieve the dom value instead of updating it.\r\n\r\nSee: https://github.com/angular/angular.js/issues/15603\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-01-12T22:32:33.000Z,2017-01-30T18:18:17.000Z,2017-01-18T17:07:48.000Z,false,false,7,13,16,8,24,1,2,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",1," ",2," IE doesn't approve yor changes :smiley: ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,7,"       ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,102697991,component architecture results in many isolate scopes,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nna\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nna\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-01-23T11:08:29.000Z,2017-02-06T16:30:57.000Z,2017-02-06T16:30:57.000Z,false,false,0,1,1,1,5,5,1,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,102937952,docs(*): ensure naming is correct for Angular(JS) versions,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-01-24T15:16:09.000Z,2017-01-25T09:23:19.000Z,2017-01-25T09:23:19.000Z,false,false,3,7,15,2,983,985,176,5,"     ",0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM (with one optional comment :smiley:)",1," Only a couple of blocking comments (and a couple more non-blocking).\r\n\r\nWhen I first saw the changes in the SVG images for the tutorial, I thought: ""Yay! SVG ftw!""\r\nThen I remembered we use PNGs (derived from the SVGs) in the tutorial. So, we need to update those too at some point (not necessarily as part of this PR) 😞
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,102500682,fix(select): keep ngModel when selected option is recreated with ngRe…,…peat\r\n\r\nFixes #15630\r\n,closed,false,2017-01-20T17:10:13.000Z,2017-04-15T11:36:44.000Z,2017-01-26T12:29:12.000Z,true,,11,2,2,4,35,1,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,2," LGTM (with one optional suggestion
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,102869140,fix($parse): Make sure ES6 object computed property to be watched,"Adding the missing watches for ES6 object property which added in #14407\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`$scope.$watch` can not work as expected.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n`$scope.$watch` works (NOT a feature change)\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNO\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-01-24T07:58:30.000Z,2017-02-04T14:12:27.000Z,2017-02-04T14:12:27.000Z,false,true,7,4,4,2,41,0,2,0,,0,,0,,0,,0,,0,,0,,0,,1," ",1," LGTM, but ideally @lgalfaso should take a look too :smiley:",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,102268535,"$http: allow differentiation between Request Error, Abort and Timeout","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nAdding param xhrStatus to response and separate handlers for `onerror`, `onabort` and `ontimeout`\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSame handler for all error events\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nSeparate handlers\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nProbably not\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nSome additional tests might be required in `httpSpec.js` and the docs would need updating as well.",closed,false,2017-01-19T13:43:51.000Z,2017-04-20T10:15:22.000Z,2017-04-20T10:15:22.000Z,false,,7,1,3,6,29,18,3,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," We need: \r\n\r\n1. More tests for the new feature (e.g. test for all possible values).\r\n2. Docs (as @Narretz mentioned already).\r\n3. Similar changes in the mocked `$httpBackend` in `angular-mocks`
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,102545241,fix($snifferProvider): allow history for nwjs applications,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`sniffer` incorrectly detects NW.js applications as `chromePackagedApp` disallowing them to make use of the history API.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCorrectly detecting NW.js applications allowing them to make use of the History API.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n#15474\r\n",closed,false,2017-01-20T22:06:36.000Z,2017-01-27T21:23:34.000Z,2017-01-26T22:16:15.000Z,false,,2,5,6,4,21,0,2,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,102306027,fix (ngResource) dynamic params escaping fix,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nIt doesn't work correctly according to [docs](https://docs.angularjs.org/api/ngResource/service/$resource) if url params are dynamic. So, for instance, this is gonna work: \r\n\r\n```javascript\r\n// In SomeResourceName factory:\r\n$resouce('/path/\.json',  ...).save({});\r\n```\r\n\r\nbut almost the same code works incorrectly: \r\n\r\n```javascript\r\n// In SomeResourceName factory:\r\n$resouce('/path/:json',  {json: '\.json'}, ...).save({});\r\n```\r\nit sends request to ` :path/%5C.json`\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nMight be\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-01-19T16:56:23.000Z,2017-01-27T16:18:57.000Z,2017-01-27T16:18:56.000Z,false,false,1,3,2,3,14,2,2,0,,0,,0,,0,,0,,0,,0,,0,,1," Implementation-wise LGTM.\r\n\r\n##\r\nI am a little concerned about whether this is a breaking change, though. The docs are not clear on whether `\.` in param values is expected to be escaped and there is the possibility that people rely on the current behavior.",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,102340952,fix(ngResource): do not eat exceptions in success callback,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nAddresses bug identified in #15624.\r\n\r\n**No error message is output in the console:**\r\n```\r\nvar User = $resource('users/:id', {id: '@id'});\r\nvar user User.get({id: 123}, function (res) {\r\n    y  = x + z; // this line not log any exception on the console\r\n}, function () {\r\n    console.log(arguments);\r\n});\r\n```\r\n**Error message is output in the console:**\r\n\r\n```\r\nvar User = $resource('users/:id', {id: '@id'});\r\nvar user User.get({id: 123}, function (res) {\r\n    y  = x + z; // and this log the exception in the console\r\n});\r\n```\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nNow any exceptions thrown in the success callback will be thrown and not eaten.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-01-19T20:19:40.000Z,2017-02-04T19:01:29.000Z,2017-02-04T19:01:29.000Z,false,false,3,4,6,4,78,10,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",2," The implementation looks good. I've left a comment regarding the tests. ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,63069180,"feat($sce): handle URLs through the $sce service, plus allow concatenation in that $sce contexts.","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nThis is an improvement to  uniformize the secure context code, by making the $sce handle URL-context in roughly the same way it handles HTML-context. That also required a more silent change, to have $sce-contexts where concatenation of values is allowed (described below).\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nCurrently, the whole $sce.URL context is unused. Dynamically-set URLs that are sanitized through various codepaths (mostly in compile.js, $set function). \n\nUsually, if one wants to force a value through Angular's security mechanisms, the $sce.trustAs function should be used. There's no straightforward way to do it in a single place for URLs, as `<a href=""{{sce.trustAsUrl(foo)}}"">` sanitizes silently its link. \n\nAlso, an attribute being a $sce context means that concatenations are blocked: `<iframe src=""generate.php?{{params}}"">` would throw for instance. However, since it's not a $sce context, `<img src=""generate.php?{{params}}""/>` is fine.\n\n**What is the new behavior (if this is a feature change)?**\n\nThe new behavior makes Angular handle URLs with the $sce service, similarly to HTML context. $sce.trustAsUrl is now useful, as it allows bypassing the sanitization. If one uses plain strings in URL-context attributes, they will be sanitized through the existing $$sanitizeUri service.\n\nI also have tweaked $interpolate to work as expected with concatenated values in select secure contexts. In the listed contexts (URL only for now, though that could be expanded to anything), trustAs'd values with no concatenations are not sanitized (eg `""{{trustedVar}}""` works as you'd expect), and anything else is downgraded to string, concatenated if needed, and then passed to $sce.getTrusted that handles the sanitization as usual. For instance, `""java{{trustAsUrl('script:evil();')}}""` is sanitized as it should.\n\n**Does this PR introduce a breaking change?**\n\nYes: I've merged both URL sanitization methods in $$sanitizeUri (since there's a single $sce.URL context). This will break the applications that edit one of these whitelists, but I believe there's security benefits in doing so, as they will be able to use trustAsUrl in specific parts of their application instead of having to blanket-approve the special scheme they rely on. Otherwise, I believe the changes are backwards-compatible unless you're really hooking into Angular internals.\n\n**Please check if the PR fulfills these requirements**\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [X] Tests for the changes have been added (for bug fixes / features)\n- [X] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nI'm from Google security, but I'm not right all the time, so please ask about anything: I might have missed something, or this might not be something you want. I had to modifiy components I'm not that familiar with. Things to check:\n- If you had special reasons to split the URL sanitization in two parts, I haven't been able to find it. I just merged the whitelists. \n- I'm not entirely sure of the $interpolate change. I've had several issues with infinite digests with arrays while developping, the latest changes seem to pass, but there might still be dragons hidden in there.\n- I'm not sure either I got all the doc modified. \n- Finally, $sce.HTML / $sce.RESOURCE_URL could also be concatenated. At least for HTML it works, and you could have something like the commented-out test in sceSpecs.js, but I'm not sure it brings much value here, so I've left it disabled for now. RESOURCE_URL could follow the same path with either completely-trusted URLs, or concatenated-then-treated-as-string URLs that would be checked against the whitelist/blacklist mechanism. \n",open,false,2016-03-16T14:04:10.000Z,2017-06-29T14:45:09.000Z,,false,false,13,8,22,6,419,243,12,1," ",1," I have downloaded and rebased this locally - not a trivial task since this PR is getting quite old.\r\nIt looks good to me but since this is all hitting security sensitive code, I would like two more LGTM from core AngularJS members.",0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,5,"     ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,50020198,Add request and requestError interception in ngResource,"This patch adds request and requestError interception for ngResource actions,\nas per the documentation found for $http interceptors. It is important to\nnote that returning an error at this stage of the request - before the\ncall to $http - will completely bypass any global interceptors and/or recovery\nhandlers, as those are added to a separate context. This is intentional; intercepting\na request before it is passed to the HTTP stack indicates that the resource itself\nhas made a decision, and that it accepts the responsibility for recovery.\n\nCloses #5146\n",closed,false,2015-11-07T00:07:56.000Z,2017-02-06T19:39:42.000Z,2017-02-06T19:39:42.000Z,false,false,39,1,19,1,275,7,2,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,104086459,fix(filter): Don't throw `key.charAt is not a function` when object's keys are not of type `string`.,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an object has keys which are not of type string, the `filter` would throw an exception for trying to call `charAt`, which is not defined on a none-string type.\r\n\r\n#15644\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit checks whether `charAt` is defined before calling it.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-02-01T07:22:43.000Z,2017-02-08T21:18:08.000Z,2017-02-08T21:18:08.000Z,false,false,4,3,2,2,3,1,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,104289996,docs(guide/Components): should reference Angular 2,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update",closed,false,2017-02-02T07:58:43.000Z,2017-02-02T09:59:18.000Z,2017-02-02T09:46:47.000Z,false,,6,2,2,1,1,1,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,104324611,docs app style updates,"This updates the docs app to the new header style found on angularjs.org.\r\n\r\nI've also taken the liberty to update the menu entries on the doc site - pending approval I'll update the org site, too (would fix https://github.com/angular/angular.js/issues/14351)\r\n\r\nAnd fixes https://github.com/angular/angular.js/issues/14963\r\n\r\nNotable differences between org / docs:\r\n- search icon\r\n- font family / weight (should we update?)\r\n- no drop shadow on navbar because there's a secondary bar on docs\r\n\r\nNotable differences between docs old / new:\r\n- mobile: the top header + search are fixed, sub header is relative (previously all relative)\r\n- mobile search close icon has moved over the search bar, because I had some problems giving it it's previous position while keeping the search results scrollable (oh my)\r\n\r\nImplementation notes:\r\n- angular-topnav.css is included as is from org site\r\n- several overrides necessary because org uses bootstrap 2 / docs uses bs 3 (oh my)\r\n- org site uses one breakpoint at 800px, docs uses one at 768 and one at 992. I tested it and it doesn't affect the common screen sizes\r\n\r\nFuture work:\r\n- clean up the css and maybe implement sass for the docs app\r\n\r\nScreens:\r\n\r\n![fireshot screen capture 014 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop dropdown open](https://cloud.githubusercontent.com/assets/1153097/22548685/f47fb29c-e947-11e6-8f41-a6ab683a4037.png)\r\n![fireshot screen capture 015 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop search](https://cloud.githubusercontent.com/assets/1153097/22548686/f481f354-e947-11e6-8ea6-735012fe9c9c.png)\r\n![fireshot screen capture 016 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone dropdown](https://cloud.githubusercontent.com/assets/1153097/22548683/f47f66ac-e947-11e6-87b3-8317404394a1.png)\r\n![fireshot screen capture 017 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone search](https://cloud.githubusercontent.com/assets/1153097/22548684/f47fad88-e947-11e6-80c6-9beb87f70c53.png)\r\n",closed,false,2017-02-02T12:03:53.000Z,2017-02-15T14:53:53.000Z,2017-02-15T14:53:53.000Z,true,,1,2,1,2,196,105,9,0,,0,,0,,0,,0,,0,,0,,0,,1," Didn't serve it locally, but the code and the screenshots look very good :smiley:",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," lgtm. please make the same menu change as with the angularjs.org menu (faq/tutorial swap).\r\n\r\nthanks!",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,104386538,Add casts to avoid some 'non-existent property' warnings from Closure…,"… Compiler.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-02-02T17:32:28.000Z,2017-02-02T20:41:51.000Z,2017-02-02T20:39:03.000Z,false,false,5,1,0,1,4,3,3,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," It seems strange to me that these are the only places creating warnings (but it is probably because I am not very familiar with Closure Compiler
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,104567050,fix(select): keep original selection when using shift to add options …,"…in IE/Edge\r\n\r\nIn IE9-11 + Edge, the selected options were previously incorrect under the following\r\ncircumstances:\r\n- at least two options are selected\r\n- shift+click or shift+down/up is used to add to the selection (any number of options)\r\n\r\nIn these cases, only the last of the previously selected options and the newly selected\r\noptions would be selected.\r\n\r\nThe problems seems to be that the render engine gets confused when an option that\r\nalready has selected = true gets selected = true set again.\r\n\r\nNote that this is not testable via unit test because it's not possible to simulate\r\nclick / keyboard events on option elements (the events are delegated to the select element\r\nchange event).\r\n\r\nFixes #15675\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #15675\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~[ ] Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~[ ] Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-02-03T16:32:12.000Z,2017-02-08T16:44:49.000Z,2017-02-08T16:44:49.000Z,true,,3,7,9,2,39,12,2,0,,0,,0,,0,,2,"  ",0,,0,,0,,1," ",2," Couldn't this be tested by directly calling `selectCtrl.writeValue`? ",1," ""No test"" is fine by me.",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,105058680,fix($window): allow $window to be mocked in unit tests,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nhttps://github.com/angular/angular.js/issues/15685\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] <s>Docs have been added / updated (for bug fixes / features)</s>\r\n\r\n**Other information**:",closed,false,2017-02-07T17:51:17.000Z,2017-02-08T16:10:42.000Z,2017-02-08T16:10:42.000Z,false,false,2,4,3,1,16,3,2,0,,0,,0,,0,,0,,0,,0,,0,,1," ",1," ",1," Can you also change the commit message to `fix($jsonpCallbacks): ...`?",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,104782136,"refactor($rootScope): asyncQueue is pre-$parsed, no need to call $eval","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nminor refactoring\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno",closed,false,2017-02-06T11:41:29.000Z,2017-02-09T21:40:14.000Z,2017-02-09T21:40:14.000Z,false,,1,6,5,1,15,6,2,0,,0,,0,,0,,0,,0,,0,,0,,1," ",1," ",2," One little thing. LGTM otherwise. ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,105230712,test($http): ensure json deserialization errors are forwarded to erro…,"…r handler\r\n\r\nSince https://github.com/angular/angular.js/commit/e13eeabd7e34a78becec06cfbe72c23f2dcb85f9,\r\nerrors thrown from onFulfilled and onRejected handlers are passed to the regular http\r\nerror handlers. Before this, JSON deserialization errors lead to hard application errors, and could\r\nnot be handled by application code. This behavior was introduced in https://github.com/angular/angular.js/commit/7b6c1d08aceba6704a40302f373400aed9ed0e0b, and originally, a malformed JSON string was forwarded\r\nas the data to the http success response handler.\r\n\r\nThis commit adds a specifc test case, even though the behavior is unlikely to break in the future without\r\na change in the $q rejection handling.\r\n\r\nRelated #11433\r\n\r\n",closed,false,2017-02-08T14:45:51.000Z,2017-02-08T16:41:24.000Z,2017-02-08T16:41:24.000Z,true,,0,1,0,1,14,0,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,105305344,fix(angular.copy): copy own non-enumerable properties,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nhttps://github.com/angular/angular.js/issues/15692\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nnot sure if this can be called a breaking change\r\n",open,false,2017-02-08T21:08:53.000Z,2017-06-29T14:29:33.000Z,,false,,0,2,2,1,22,0,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,105617741,fix($sanitize): prevent clobbered elements from freezing the browser,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nbug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nbrowser can be frozen with bad HTML\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nan exception is thrown instead\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-02-10T12:14:35.000Z,2017-02-24T17:43:44.000Z,2017-02-24T17:42:44.000Z,true,,3,13,13,1,50,4,3,2,"  ",0,,0,,0,,0,,0,,0,,0,,6,"      ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,5,"     ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,105999975,feat(errorHandlingConfig): make the length of URL refrence in error m…,"…essages configurable\r\n\r\nCloses #14744\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFeature\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSometimes AngularJS throw error with long messages, very long URL referenced error\r\nWill cause 414 Request-URI Too Large  as in Issue https://github.com/angular/angular.js/issues/14744\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nmake the Url reference error length configurable.\r\n\r\n        errorHandlingConfig({urlMaxLength: 500});\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNO\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nMicrosoft Internet Explorer has a maximum uniform resource locator (URL) length of 2,083 characters. Internet Explorer also has a maximum path length of 2,048 characters. This limit applies to both POST request and GET request URLs. https://support.microsoft.com/en-us/help/208427/maximum-url-length-is-2,083-characters-in-internet-explorer which is less than all the other browsers, so i added the default value for url max length to be 2000 characters.\r\n\r\nI don't know what should be the minimum length for URL reference error but i implemented it with a constrains to be more than 200.\r\n",open,false,2017-02-13T23:09:49.000Z,2017-06-29T14:28:15.000Z,,false,false,2,8,13,1,122,18,6,0,,0,,0,,0,,1," ",0,,0,,0,,3,"   ",0,,1," Don't we have tests for `errorHandlingConfig()`? 😱 \r\nCan you add them?",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,105485812,fix(angular.copy) support for Map and Set,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nthe copied Map or Set will fail to call functions with an error such as:\r\nTypeError: Method Map.prototype.size called on incompatible receiver #<Map>\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nangular.copy will now property create new Map or Set objects with the same values as the source.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ x] Tests for the changes have been added (for bug fixes / features)\r\n- [ x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",open,false,2017-02-09T18:27:33.000Z,2017-06-29T14:28:41.000Z,,false,true,12,4,5,0,0,0,0,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,106896400,fix($http): JSON parse failure,"Fixes #15695\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n#15695 \r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-02-19T10:32:58.000Z,2017-03-14T12:50:02.000Z,2017-03-14T12:50:02.000Z,false,false,16,10,18,6,24,7,3,0,,0,,0,,0,,1," ",0,,0,,0,,3,"   ",1," ",2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,107197606,doc($sce): Overhaul the $sce service's documentation.,"A big docs update around the $sce: there's a lot of content in there that's often misunderstood, and some of the documentation starts to get really old too. Plus some minor falsehoods in there... Overall, this isn't a major refactoring, but there's a lot of smaller changes.\r\n\r\ncc @mprobst for another set of eyes on the contents.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNope, it's a doc-only CL.\r\n\r\n**Other information**:\r\n- I haven't tested how the doc renders, as I couldn't find a way to do so ?\r\n",closed,false,2017-02-21T14:20:56.000Z,2017-03-21T15:36:45.000Z,2017-03-21T15:36:45.000Z,false,,9,23,42,6,251,181,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," I trust you that it looks good when rendered :smiley:\r\n(You still need to fix the linting issue Travis complains about.)",1," ",0,,18,"                  ",0,,0,,0,,2,"  ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,107228362,feat($compile): Lower the security context of SVG's a and image xlink:href,"They should go through regular sanitization, RESOURCE_URL is overkill there.\r\nThis does not change the context for the rest of xlink:href attributes.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nMinor breaking change. \r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nxlink:href are always RESOURCE_URL context, so they go through the $sce whitelist, but aren't sanitized. That context is intended for links to things that are potentially executed as scripts in your origin, which isn't the case here.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nimage and a xlink:href are now sanitized as link URLs (like a href), and won't complain on different-origin links anymore.\r\n\r\n**Does this PR introduce a breaking change?**\r\nThis is breaking, but only in marginal (and probably unsafe) cases. If you whitelisted something for a xlink:href binding on one of those two, you'll need to change the aHrefSanitizationWhitelist instead. In the overwhelming majority of cases, everything that works with the default settings will keep working, and those defaults aren't usually modified.\r\n\r\n**Other information**:\r\nI'm almost sure there are issues around ng-href in svg lying around, and probably general svg bindings security issues too :/ ng-href security context currently doesn't match the xlink:href ones. It can't be fixed without breaking changes though, so that's for another PR. Some simple tests: https://plnkr.co/edit/PbR1FH2v4luScSYdU16t?p=preview\r\n\r\n",closed,false,2017-02-21T16:39:31.000Z,2017-03-04T22:58:14.000Z,2017-03-04T22:58:14.000Z,false,false,6,6,6,2,47,8,2,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",2," LGTM ",0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,107821478,Autobootstrap fixes,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-02-24T12:33:09.000Z,2017-02-24T17:08:48.000Z,2017-02-24T15:45:09.000Z,false,false,2,10,10,6,115,87,2,4,"    ",0,,0,,0,,0,,0,,0,,0,,2,"  ",1," ",1," I think we should also have more tests featuring cases where more than one of `src`/`href`/`xlink:href` are present.",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,108099759,fix(Angular): do not autobootstrap if the `src` exists but is empty,"In Chrome an empty `src` attribute will be ignored, but in Firefox it seems\r\nhappy to prepend the `base[href]` and try to load whatever that is.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-02-27T11:56:07.000Z,2017-02-27T20:47:22.000Z,2017-02-27T20:47:22.000Z,true,,0,2,0,1,13,8,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,108382026,fix($controller): remove the option to instantiate controllers from c…,"…onstructors on `window`\r\n\r\nThis also removes the likewise deprecated `$controllerProvider.allowGlobals()` method.\r\n\r\nCloses #15349\r\n\r\nBREAKING CHANGE:\r\n\r\nThe option to instantiate controllers from constructors on the global `window` object\r\nhas been removed. Likewise, the deprecated `$controllerProvider.allowGlobals()`\r\nmethod that could enable this behavior, has been removed.\r\n\r\nThis behavior had been deprecated since AngularJS v1.3.0, because polluting the global scope\r\nis bad. To migrate, remove the call to $controllerProvider.allowGlobals() in the config, and\r\nregister your controller via the Module API or the $controllerProvider, e.g.\r\n\r\n```\r\nangular.module('myModule', []).controller('myController', function() {...});\r\n\r\nangular.module('myModule', []).config(function($controllerProvider) {\r\n  $controllerProvider.register('myController', function() {...});\r\n});\r\n\r\n```\r\n",closed,false,2017-02-28T17:40:56.000Z,2017-03-01T12:27:24.000Z,2017-03-01T12:27:18.000Z,true,,2,3,0,2,11,67,5,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," There is also [a section in the phonecat tutorial][1] that refers to global controllers. It is not exactly clear what it refers to (does it refer to `allowGlobals` or a hypothetical non-AngularJS app that defines controllers as globals), but it is weird enough and maybe could be removed along with `allowGlobals()`.\r\n\r\nEither way LGTM (as long as Travis si happy).\r\n\r\n[1]: https://github.com/Narretz/angular.js/blob/678d5451c86b8d5390f7b200f287e2a4b61f0162/docs/content/tutorial/step_02.ngdoc#L151-L206",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  The removed tutorial section was also using manual construction that bypasses the DI so it was really bad anyway
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,108379464,fix(ngTouch): remove ngClick override and $touchProvider.ngClickOverr…,"…ideEnabled()\r\n\r\nCloses #15755\r\n\r\nBREAKING CHANGE:\r\n\r\nThe `ngClick` directive from the ngTouch module has been removed, and with the also the\r\ncorresponding $touchProvider.ngClickOverrideEnabled() method.\r\n\r\nIf you have included ngTouch in your application with a version of 1.5.0 or higher, and have not\r\nchanged the value of $touchProvider.ngClickOverrideEnabled()`, then there are no migration steps.\r\n\r\nThe `ngClick` override directive had been deprecated and by default disabled since v1.5.0,\r\nbecause of buggy behavior in edge cases, and a general trend to avoid special touch based\r\noverrides of click events. If you still need a touch override, consider using\r\n[Fastclick](https://github.com/ftlabs/fastclick).\r\n\r\nNote that the `$touch` service still offers the `ngClickOverrideEnabled()` function for\r\nlibraries that want to detect if an app uses the click override. Starting with 1.7.0, it\r\nwill always return `false`.\r\n\r\n\r\nOther info:\r\n\r\nThis one is a bit tricky, as we have deprecated the ngClick directive, but at the same time introduced two new APIs: $touchProvider.ngClickOverrideEnabled and $touch.ngClickOverrideEnabled().\r\nI have removed the former, because it's directly tied to the directive. I think that's fine, as someone who uses the ngClick override must migrate to a different solution anyway, and will see an error when he updates and the provider fn is missing. I've kept the actual provider for the unlikely case that we introduce new config for the ngTouch module.\r\nI've also kept the $touch.ngClickOverrideEnabled() method, as this one is used by material to check if they should include their own touch stuff. I think if we removed this then they wouldn't be able to determine if the ngClick override is present (because ngTouch module but no $touch service could also mean a pre 1.5.0 version of ngTouch)\r\n",closed,false,2017-02-28T17:27:19.000Z,2017-03-14T10:48:55.000Z,2017-03-14T10:48:55.000Z,true,,19,8,6,4,3,1154,5,0,,0,,0,,0,,1," ",0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",2,"  ",2,"  @Narretz Re commit msg:\r\n\r\n> and with the also the\r\n\r\nA typo.\r\n\r\n> - Since iOS 8, Safari removes the delay on so-called ""slow taps"".\r\n\r\nThis is incomplete. I wouldn't even mention iOS 8 due to its low market share (https://developer.apple.com/support/app-store/) but only 9.3+ which have conditions very similar to Chrome/Firefox/Edge mobile:\r\nhttps://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_1.html#//apple_ref/doc/uid/TP40014305-CH10-SW8\r\n
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,95574900,Remove angular.uppercase/lowercase,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix/refactor\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nwe expose lowercase/uppercase on the public angular object\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nyes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2016-11-28T20:55:50.000Z,2017-03-08T20:23:08.000Z,2017-03-08T13:33:35.000Z,true,,5,3,3,1,23,39,8,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,108502253,docs(guide/Migrating from Previous Versions): add info for 1.4 ngPatt…,…ern and pattern breaking change\r\n\r\nIntroduced in commit 0e00108\r\n\r\nCloses #15758\r\n\r\n,closed,false,2017-03-01T09:54:02.000Z,2017-03-07T19:13:25.000Z,2017-03-07T19:13:25.000Z,true,,6,2,1,2,78,5,1,0,,0,,0,,0,,0,,1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,108544041,fix($log): don't parse error stacks manually outside of IE/Edge,"IE/Edge display errors in such a way that it requires the user to click in\r\n4 places to see the stack trace. There is no way to feature-detect it so\r\nthere's a chance of the user agent sniffing to go wrong but since it's only\r\nabout logging, this shouldn't break apps. Other browsers display errors in\r\na sensible way and some of them map stack traces along source maps if available\r\nso it makes sense to let browsers display it as they want.\r\n\r\nFixes #15590\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nStack traces don't have source maps applied in any browser. The stack trace is formatted by Angular and printed as a string.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nStack traces have source maps applied in Chrome/Safari. The received error is printed as-is instead of printing a transformed stack trace.\r\n\r\n**Does this PR introduce a breaking change?**\r\nMaybe? The format of logged exceptions is not specified in the docs but there is a chance someone depends on it always being a string.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-03-01T14:05:13.000Z,2017-03-03T10:56:10.000Z,2017-03-03T10:39:47.000Z,false,false,0,6,4,2,49,24,2,0,,1," LGTM",0,,0,,0,,0,,0,,0,,2," A concern about a possible BC (for tests).\r\nLGTM otherwise. ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,107590393,docs(ngAnimate): Improve Staggering config for animations,"After console.log the output from the computeCachedCssStaggerStyles function I realized that I need set animation-duration to 0s and animation-delay on my stagger class as I am using animations instead of transitions.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-02-23T09:59:54.000Z,2017-03-07T19:21:23.000Z,2017-03-07T19:21:23.000Z,false,false,5,1,2,1,3,0,1,0,,0,,0,,0,,0,,0,,1," Just white-space changes
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,108793269,test(errorHandlingConfig): add test for errorHandlingConfig() to be i…,"…ndependent of minErr\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ntest\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere is no test for errorHandlingConfig\r\n**What is the new behavior (if this is a feature change)?**\r\nAdd tests to errorHandlingConfig independent of minErr tests\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nThese tests was added in https://github.com/angular/angular.js/pull/15707 , but it looks like there are some problems in the PR, so i have added the missing tests in this PR.",closed,false,2017-03-02T16:11:48.000Z,2017-03-04T22:46:50.000Z,2017-03-04T22:46:50.000Z,false,false,2,2,4,1,27,7,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," One minor nit. LGTM otherwise :smiley:",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,109999410,Fix newline bug in date-filter,"Formatting a date across 2 lines fails:\r\n```html\r\n<span>{{ '2017-03-09' | date: 'MMM\nyyyy' }}</span>\r\n```\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe date format is only processed up to the newline.  i.e. as though the sample code was:\r\n\r\n```html\r\n<span>{{ '2017-03-09' | date: 'MMM' }}</span>\r\n```\r\n\r\nProducing:\r\n```html\r\n<span>Mar</span>\r\n```\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe full date format string is processed, producing:\r\n```html\r\n<span>Mar\r\n2017</span>\r\n```\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-03-09T20:32:06.000Z,2017-03-13T18:23:15.000Z,2017-03-13T18:23:15.000Z,false,,2,3,1,2,7,1,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",1," Generally LGTM.\r\nCan you please update the commit message to follow our [guidelines][1]? That helps when generating the changelog.\r\n\r\n[1]: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," Solves the problem of '.' at regular expression that was excluding newline character '\n'. [\s\S] is a safe replacement. ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,109355096,fix($compile): remove the preAssignBindingsEnabled flag,"BREAKING CHANGE:\r\n\r\nPreviously, the $compileProvider.preAssignBindingsEnabled flag was supported.\r\nTo migrate your code:\r\n\r\n1) If you specified `$compileProvider.preAssignBindingsEnabled(true)`, you\r\ncan remove that statement - since AngularJS 1.6.0 this is the default so your\r\napp should still work even in AngularJS 1.6 after such removal. Afterwards,\r\nmigrating to AngularJS 1.7.0 shouldn't require any further action.\r\n\r\n2) If you specified `$compileProvider.preAssignBindingsEnabled(true)`, first\r\nmigrate your code so that the flag can be flipped to `false`. The instructions\r\non how to do that are available in the ""Migrating from 1.5 to 1.6"" guide:\r\nhttps://docs.angularjs.org/guide/migration#migrating-from-1-5-to-1-6\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFeature removal.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe `$compileProvider.preAssignBindingsEnabled` flag is supported.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe `$compileProvider.preAssignBindingsEnabled` flag doesn't exist.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nIt is strongly advised to view this pull request with `?w=1` in the query string i.e. at https://github.com/angular/angular.js/pull/15782/files?w=1. Unfortunately, it's impossible to insert comments in this view.\r\n",closed,false,2017-03-06T21:40:13.000Z,2017-03-15T14:39:40.000Z,2017-03-15T14:39:32.000Z,false,false,10,1,0,1,5467,5739,4,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," The code LGTM.\r\n\r\nI believe we could simplify things a little more in `$compile` (e.g. by not using the ""lazy"" path for controller instantiation). And potentially drop that path in `$controller` altogether.\r\nBut this doesn't have to be part of this PR.\r\n\r\nWRT the commit message:\r\n\r\n- It helps (when creating the changelog) to wrap code in backticks (e.g. `$compile.preAssignBindingsEnabled` and `$onInit` in the first paragraph).\r\n\r\n- In (2) `$compileProvider.preAssignBindingsEnabled(true)` should use `false`, not `true`.\r\n",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,110876195,docs(faq): document the AngularJS/jqLite deprecation strategy,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe deprecation strategy is not specified.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe deprecation strategy is specified.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\nFixes #15282",closed,false,2017-03-15T15:48:47.000Z,2017-03-22T11:06:59.000Z,2017-03-22T10:32:29.000Z,true,,2,2,4,1,10,0,1,0,,0,,0,,0,,0,,0,,1," Just a few minor improvements in the added text.\r\nI noticed that we basically don't talk about deprecation in the rest of the FAQ. Maybe we should add this to the section about the versioning strategy, and add this new deprecation section as a subsection?",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111177451,chore(github): update the issue template,"Updates the issue template.\r\n- make it more like the Angular one\r\n- include extra information into comments, so the actual output is cleaner and you can find the relevant info faster when triaging\r\n- make it easier to differentiate between bugs and features\r\n- remove section that are only relevant for features ... this is often filled out with redundant info\r\n- make sections shorter and hopefully clearer",closed,false,2017-03-16T22:18:06.000Z,2017-03-22T16:03:51.000Z,2017-03-22T16:03:45.000Z,true,,0,4,5,1,36,27,1,0,,0,,0,,0,,2,"  ",0,,0,,0,,2," A couple of nits. 💯 otherwise :smiley
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111266274,docs(filter): clarify the comparator parameter,"The previous description does not make it clear how this parameter is used with other parameters\r\nand its purpose.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nThis is a doc update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nN/A\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nThis PR does not introduce a breaking change.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-03-17T11:56:44.000Z,2017-03-24T11:19:13.000Z,2017-03-23T14:52:41.000Z,false,false,5,2,2,3,3,2,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,110674391,perf(ngOptions): prevent initial options repaiting,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nRefers to this issue: [ngOptions slow performance in IE due to option rerendering](https://github.com/angular/angular.js/issues/15801)\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nNow the options are loaded once when we create the `<select ng-options>` directive. Also, if we add an `<option>` element with an ng-if directive, it is not deleted now.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo. \r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nNone.",closed,false,2017-03-14T17:22:03.000Z,2017-06-29T08:52:37.000Z,2017-06-29T08:52:37.000Z,false,,10,8,15,3,58,16,2,0,,0,,0,,0,,0,,0,,3," Looking good so far! Some minor clarifications and changes nedded.  I would like for @petebacondarwin too also take a look because I remember he once wasn't a fan of doing `if (!options) return`  ",0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111708305,Allow NgModelController to be copied,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`copy` throws when copying a `NgModelController` instance. This will occur when deep watching such as when doing `<e ref=""[myNgModel]"">` (#15833)\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe internal `NgModelController` `$$scope` is hidden\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno, unless someone is doing something crazy that depends on `$$scope` being enumerable?\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nI've split the commit up into 3.  I think the refactor + (modified) test should go into 1.7. I don't think the actual fix should go into 1.7.  The specific test case (watched a literal containing an ng-model) will no longer fail in 1.7. If we want to prevent other cases like manually deep-watching or manually `copy`ing an ng-model I think we should do it differently in 1.7...\r\n",closed,false,2017-03-21T05:58:05.000Z,2017-03-28T05:45:48.000Z,2017-03-28T05:45:48.000Z,true,,1,11,10,2,28,3,2,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111290943,docs ($compile): add error documentation for noslot error in $compile,"there was no error page for the $compile:noslot error\r\n\r\nthis resolves #15790\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-03-17T14:22:04.000Z,2017-03-22T10:53:26.000Z,2017-03-22T10:51:56.000Z,true,,11,1,7,6,38,0,1,0,,0,,0,,0,,0,,0,,1," Looking good generally, just a few things to improve / move around
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111935822,refactor($controller): remove unused injected $window,This got left behind after e269c14425a3209040f65c022658770e00a36f16,closed,false,2017-03-22T05:37:35.000Z,2017-03-22T10:54:56.000Z,2017-03-22T10:54:56.000Z,true,,0,1,0,1,1,1,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111983321,docs(faq): clarify the versioning strategy,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nInformation is not super clear\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nclarify info on:\r\n- When do features and breaking changes appear\r\n- Relationship with Semver\r\n- Compatibility of core and optional modules \r\n\r\n",closed,false,2017-03-22T11:11:30.000Z,2017-03-24T11:45:43.000Z,2017-03-24T11:45:28.000Z,true,,2,10,15,3,64,24,1,0,,0,,0,,0,,3,"   ",0,,0,,0,,2,"  ",1," A couple of typos. LGTM otherwise.",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111938018,refactor($parse): move duplicate $parse interpreter/compiler logic into common location,... and deleted a couple other unused things.,closed,false,2017-03-22T06:01:12.000Z,2017-03-28T06:29:04.000Z,2017-03-28T06:29:04.000Z,true,,1,1,0,1,13,20,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111941033,refactor($compile): reuse shared simpleCompare method,I think this could be used in some other places as well once it's available...,closed,false,2017-03-22T06:33:03.000Z,2017-03-28T06:25:23.000Z,2017-03-28T06:25:23.000Z,true,,2,2,0,1,9,6,3,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," The function is pretty simple, so I wouldn't expect it to decrease performance (I hope it would be inlined by the VM anyway). But I don't feel strongly about it.\r\n\r\nLGTM",1," In general LGTM. But if it is going to be used in other places, I would rather have it be done as part of this PR instead on a separate one. From a quick search, the two places I could find are:\r\n\r\n- [equals][1]\r\n- [ngModel][2]\r\n\r\n(There are also some linting issues.)\r\n\r\n[1]: https://github.com/jbedard/angular.js/blob/8a5996f6feebf54142700bbc15cd107f0f5e04cd/src/Angular.js#L1095\r\n[2]: https://github.com/jbedard/angular.js/blob/8a5996f6feebf54142700bbc15cd107f0f5e04cd/src/ng/directive/ngModel.js#L898-L901",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111938894,refactor($parse): make use of local variable instead of refetching property,I swear that variable [wasn't there originally](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa#diff-780de070ede30180f6aedb6c5f7d57caR1218)!,closed,false,2017-03-22T06:10:37.000Z,2017-03-28T05:53:14.000Z,2017-03-28T05:53:14.000Z,true,,0,2,0,1,2,3,1,0,,0,,0,,0,,0,,1," ",0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111979169,Warn for missing / obsolete error docs,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWe don't know when error docs are missing or obsolete\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\nI have removed an obsolete animation error and moved the tpload error to the correct namespace. In the $templateRequest file, it looks like the error is created in the $compile namespace, but it actually ends up as the $templateRequest namespace, where it should be.\r\n",closed,false,2017-03-22T10:49:22.000Z,2017-03-24T09:44:54.000Z,2017-03-24T09:44:53.000Z,true,,2,2,2,2,23,13,2,0,,0,,0,,0,,1," ",0,,0,,0,,0,,1," I'm no dgeni guru, but afaik LGTM :smiley:\r\n<sub>(It would be nice to have a test for `templateRequestMinErr`, but not a blocker.)</sub>\r\n\r\n💯
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111988877,fix(jqLite): make jqLite invoke jqLite.cleanData as a method,"The previous implementation of jqLite didn't use cleanData from the jqLite\r\nobject but instead used a cached version which maede it impossible to\r\nmonkey-patch jqLite.cleanData similarly to how you can do it in jQuery.\r\n\r\nThe cleanData method is not meant to be called directly by userland code;\r\nits purpose is mainly to be able to be monkey-patched; therefore, the previous\r\nimplementation didn't make a lot of sense.\r\n\r\nThis commit enables one of the tests so far run only with jQuery to run with\r\njqLite as well.\r\n\r\nRef #8486\r\nRef #8695\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`jqLite.cleanData` is not used directly so it can't be monkey-patched like its jQuery equivalent.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe opposite.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI don't think so.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nThis is a followup to #8695.\r\n",closed,false,2017-03-22T11:42:19.000Z,2017-03-27T12:39:21.000Z,2017-03-27T09:57:13.000Z,false,,0,4,3,2,41,50,2,0,,0,,0,,0,,0,,0,,0,,0,,1," Generally LGTM. My only concern is whether this might break some (obscure) tests.",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111973400,"test(jQuery): run tests with jQuery 2.1, 2.2 & 3.2","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nTest update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWe test with jQuery 2.1, 2.2 & 3.1.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nWe test with jQuery 2.1, 2.2 & 3.2.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nAlso, update AngularJS 1.5 mentions in the docs to 1.6.\r\n",closed,false,2017-03-22T10:19:27.000Z,2017-03-27T09:28:14.000Z,2017-03-27T09:26:57.000Z,false,false,2,6,5,1,7,7,4,0,,0,,0,,0,,0,,0,,0,,0,,2," LGTM except for the tutorial related bits. ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,111989091,"feature($http): allow differentiation between Request Error, Abort and Timeout ",This is a continuation of https://github.com/angular/angular.js/pull/15626,open,false,2017-03-22T11:43:34.000Z,2017-06-29T14:56:14.000Z,,false,true,4,12,14,1,154,40,6,0,,0,,0,,0,,0,,0,,0,,0,,4,"    ",0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,7,"       ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,112047426,"chore(yarn): rely on Travis built-in Yarn support, update Yarn in Jenkins","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWe install an old Yarn verison manually.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nOn Travis we rely on built-in Yarn support and we only cache the Yarn cache, not `node_modules`. We install a new Yarn verison manually on Jenkins; the location of the install script changed.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-03-22T16:05:09.000Z,2017-03-22T21:49:58.000Z,2017-03-22T21:49:52.000Z,true,,1,1,0,1,3,7,3,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,112174913,fix($rootScope): provide correct value of one-time bindings in watchGroup,"I don't recall how or why I came across this issue, and it's confusing me, but I found this stashed and the tests do make sense...?",closed,false,2017-03-23T07:11:05.000Z,2017-03-31T05:22:23.000Z,2017-03-31T05:22:23.000Z,true,,2,7,8,1,100,7,2,0,,0,,0,,0,,1," This looks useful. I wonder if there are performance implications with the new try ... catch block? I vaguely remember an issue where a try / catch block was not correctly optimized in V8, I think. \r\nBut I assume it's not performance critical as it is in the watchGroupAction fn",1," Ok, LGTM then. Needs one other review.",0,,0,,0,,1," A couple of minor clean-up comments.\r\nLGTM otherwise.",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,83357850,fix(ngRepeat): trigger move animation,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n#15068\n",open,false,2016-08-30T22:19:23.000Z,2017-06-29T14:37:24.000Z,,false,,13,14,25,11,220,132,2,4,"   should the tests be checking the `previousNode` value that is passed to the move animation? ",2,"  ",1," LGTM - except for the failing tests :-)",0,,0,,0,,1," LGTM, except a few nitpicks. I want someone else from the team to look at this before merging as ngRepeat is an important directive.",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,5,"     ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,109246917,Fix: set $submitted on child forms when form is submitted,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen submitting a form, $submitted is not set on child forms\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI don't think so.\r\nNo one in #10071 said that his might be breaking.\r\nAngularJS doesn't have nested form isolation, and ngForm is only for grouping sub-forms. I think that it's expected that a submission event will affect all sub-forms.\r\nProbably: https://github.com/angular/angular.js/pull/11023#issuecomment-143162373\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\nFollow up to https://github.com/angular/angular.js/pull/11023",open,false,2017-03-06T12:20:22.000Z,2017-06-29T14:27:14.000Z,,false,true,5,6,7,2,63,5,2,2,"  ",0,,1," ",0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,112410949,fix($parse): standardize one-time literal vs non-literal and interceptors,"Previously literal one-time bindings did not use the expression `inputs`, causing infinite digest issues with literal values. This often forces the use of deepEquals when watching one-time literals.\r\n\r\n`ng-class` is one example of deepEquals which is no longer required (and had to be updated to keep all tests passing).\r\n\r\nThis one-time/literal behavior is now also consistently propagated through interceptors (and had to be updated to keep all tests passing).\r\n\r\n----\r\n\r\nThe ngClass/interceptor part was not originally planned but had to be changed to keep tests passing. Maybe this can be split into smaller commits? But it's mainly just deleting...!",closed,false,2017-03-24T08:52:46.000Z,2017-03-31T07:36:20.000Z,2017-03-31T07:36:20.000Z,true,,3,12,12,3,114,159,3,0,,0,,0,,0,,0,,1," ",1," ",0,,3,"   ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,6,"      ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,112674233,Update angular.css,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-03-27T06:03:44.000Z,2017-03-27T06:08:19.000Z,2017-03-27T06:08:19.000Z,false,,3,1,0,2,1,1,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," Approved Commit to merge in master",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,17695635,feat(shutdown): Add the ability for an app to shutdown,"Adds a new `$shutdown` service that can be used to shutdown an app and the `$shutdownProvider` that can be used to register tasks that need to be executed when shutting down an app.\n\nAdded tasks for `$rootElement`, `$rootScope` and `$browser` to be able to shutdown an app\n\nRefactor `$interval` so it delegates to `$browser` just like `$timeout` does\n",open,false,2014-06-27T10:22:46.000Z,2017-06-29T15:10:42.000Z,,false,,10,3,40,1,370,137,11,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,113177638,docs($compile): remove a mention of preassigning bindings in controllers,"The deprecation warning is no longer needed as the feature has been removed\r\nin 1.7.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreassigning bindings to controllers is described as deprecated but still working. This feature has been removed so the warning is no longer needed.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-03-29T11:41:06.000Z,2017-03-29T12:15:30.000Z,2017-03-29T12:15:27.000Z,true,,0,1,0,1,0,6,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,113129135,fix($parse): fix infinite digest errors when watching objects with .valueOf in literals,I think this is an edge case of https://github.com/angular/angular.js/commit/7084deccaac5855d7148fb6d91dcb83c16b079c4 (and [1.6.x](https://github.com/angular/angular.js/commit/25f008f541d68b09efd7b428b648c6d4899e6972)) that was not handled. If those objects (in the literals) have a `.valueOf` function that returns something other then `this` it will cause an infinite digest.\r\n\r\nThis should probably also go into 1.6?,closed,false,2017-03-29T06:50:13.000Z,2017-03-31T07:17:56.000Z,2017-03-31T07:17:55.000Z,true,,0,1,0,1,93,2,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,113377082,provide isError and use it in place of instanceof Error,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nfeature/bug\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n\n**What is the new behavior (if this is a feature change)?**\n\nAngular should pass them on to the correct excetion handler, and there's an angular.isError function now.\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nre-implimented https://github.com/yefremov/iserror/blob/master/index.js to avoid license and make code faster.\n\nFixes #15868",closed,false,2017-03-30T08:54:57.000Z,2017-05-22T11:10:08.000Z,2017-05-22T11:10:07.000Z,false,,13,10,12,1,62,4,8,0,,1," ",0,,0,,0,,0,,0,,0,,3," A couple of minor comments. Looks OK otherwise (except for the missing tests).\r\nThe tests can go in https://github.com/graingert/angular.js/blob/af80f4765e2a9e795f64103b6e15770cf6eda050/test/AngularSpec.js.  ",1," LGTM",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,113826065,"fix(angular-loader): do not depend on ""closure"" globals that may not be available","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #15880.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCode that is distributed as part of both `angular.js` and `angular-loader.js` does not depend on ""closure"" globals that may not be available in `angular-loader`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15880.",closed,false,2017-04-02T17:08:59.000Z,2017-04-27T19:47:44.000Z,2017-04-27T19:47:16.000Z,false,,2,3,4,2,207,174,6,0,,0,,0,,0,,1," ",1," A few comments, otherwise LGTM",0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,114340677,chore(*): remove manualLowercase & manualUppercase functions,"The `manualLowercase` & `manualUppercase` functions were inspired by Google Caja\r\ncode. Caja is written in Java, though, where problems with `toLowerCase`\r\nworking differently in Turkish locale are well known[1]. In JavaScript\r\n`String#toLowerCase` is defined in the ECMAScript spec and all implementations\r\nare required to lowercase I in the same way, regardless of the current locale.\r\nDifferences may (and do) happen only in `String#toLocaleLowerCase`.\r\n\r\nOther libraries doing string normalization, like jQuery or DOMPurify don't\r\napply special lowercasing logic in a Turkish environment.\r\n\r\nTherefore, the `manualLowercase` & `manualUppercase` logic is dead code in\r\nAngularJS and can be removed.\r\n\r\nAlso, the `manualLowercase` & `manualUppercase` functions are incomplete; they\r\nonly lowercase ASCII characters which is different to native\r\n`String#toLowerCase`. Since those functions are used in many places in the\r\nlibrary, they would break a lot of code. For example, the lowercase filter would\r\nnot lowercase Ω to ω but leave it as Ω.\r\n\r\n[1] https://garygregory.wordpress.com/2015/11/03/java-lowercase-conversion-turkey/\r\n\r\nRef #11387\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDead code removal.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe `manualLowercase` & `manualUppercase` functions are defined & used if `'I'.toLowerCase() !== 'i'`.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n`String#toLowerCase` is used everywhere.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n",open,false,2017-04-05T10:10:35.000Z,2017-06-29T14:24:22.000Z,,false,true,2,1,0,1,5,33,4,0,,0,,0,,0,,0,,1," LGTM. Finally resolved
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,114008248,docs(uppercase): Added an example,"I saw that the uppercase filter had no example so I decided to add a minimal example to explain how the uppercase filter works.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere is currently no example for the `uppercase` filter, so I added one.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/a\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-04-03T19:49:34.000Z,2017-04-07T15:23:20.000Z,2017-04-07T15:23:20.000Z,true,,6,1,3,4,20,1,1,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,115110028,docs($http): correct and clarify default transforms,"- baddata error described incorrect http behavior, and workarounds\r\n- httpProvider defaults were missing transformResponse / transformRequest\r\n- http was not clear about JSON detection strategy\r\n\r\nCloses #15897\r\n\r\n",closed,false,2017-04-10T14:11:23.000Z,2017-04-12T09:21:11.000Z,2017-04-12T09:21:11.000Z,true,,0,3,4,2,38,18,2,0,,0,,0,,0,,2,"  ",0,,0,,0,,1," :100:",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,115525538,"chore(browserstack): Update OS X, make iOS 8-10 available to test","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nTest config update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nOnly one iOS version can be tested via BrowserStack.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\niOS 8.3, 9.3 & 10.0 can be tested.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nAngular (2+) [supports iOS 7+](https://angular.io/docs/ts/latest/guide/browser-support.html) but iOS 7 is very flakey on BrowserStack (see https://github.com/angular/angular/issues/15916). It'd be good to at least try to support the same versions; making it possible to test via BrowserStack is the first step.",closed,false,2017-04-12T11:59:38.000Z,2017-04-22T13:21:06.000Z,2017-04-12T14:00:58.000Z,true,,3,2,2,1,17,5,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," Works for me as long as it works for you 😛 ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,65879752,chore(travis): test on IE Edge,Closes #13687\n,closed,false,2016-04-09T12:28:01.000Z,2017-04-19T11:05:26.000Z,2017-04-19T11:05:26.000Z,true,,21,3,9,3,94,47,5,0,,1," LGTM",0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,115529193,"refactor(*): remove workarounds for IE <9, log all parameters in IE 9","1. Remove remanining workarounds for IE <9\r\n2. Log all parameters in IE 9, not just the first two.\r\n3. Update IE/Edge-related support comments.\r\n4. ES6 classes now require Edge 14 or newer to work.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nA refactor.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSome code targeting IE <=8 still exists in the code base, support comments don't account for Edge 15.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe opposite. Also, `$log` is now able to log more than 2 parameters on IE and all browsers use one code path for passing parameters to a proper logging function.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo, unless we consider breaking support for classes in Edge 13 (current version is 15) a breaking change.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-04-12T12:21:37.000Z,2017-04-25T19:33:25.000Z,2017-04-25T19:33:13.000Z,true,,5,8,8,3,91,160,21,0,,1," Seems secure...",0,,0,,0,,1," LGTM. How did you figure out which IE workarounds can be removed? Because many only say ""In IE"", without specifying a version",0,,0,,2," A couple of nits. Looks good otherwise.\r\n(:+1: for breaking up into separate commits.) ",1," One minor suggestion, but LGTM otherwise.",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,115696630,Update(orderBy): Guaranteed stable sort,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nFeature\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#14881 \r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nFalls back on built-in comparison function if user-provided comparison function fails to break a tie between elements being ordered.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nYes\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nBREAKING CHANGE: Using `orderBy` with a custom `comparator` function while\r\nsimultaneously setting `reverse` to `true` results in a potentially different\r\nlist order than previously.\r\n\r\nSpecifically, when the custom `comparator` fails to sort two objects (compares\r\nthem as being ""equal""), the objects would previously have remained in their\r\noriginal order in the array relative to each other. They will now switch places\r\nas the `reverse` will be more accurately respected.\r\n\r\nTo migrate, make sure that your custom `comparator` properly differentiates\r\nbetween all cases that your code base cares about and that ""equal"" cases are\r\nnot order dependent. We expect that due to the nature of this change, since the\r\nentries are considered ""equal"", that very few projects will be affected by this\r\nchange in all but a minor visual manor that still respects the expected\r\noperation being performed.",closed,false,2017-04-13T07:16:17.000Z,2017-05-19T11:42:44.000Z,2017-05-19T11:42:44.000Z,false,,4,7,8,1,16,4,2,0,,0,,0,,0,,0,,0,,0,,0,,1," ",2,"  A couple of nit. I will fix up while merging.",2," A couple of minor comments only.\r\nI am not sure about the BC tbh. I don't really consider it to be one. It would only break usecases where all of the following conditions are true:\r\n\r\n- The app is using a custom comparator.\r\n- The custom comparator fails to differentiate between two values.\r\n- The app expects both ascending and descending sorting to yield the same results (which depend on the browser). Can you also change the commit message to adhere to our guidelines. E.g.:\r\n\r\n> fix(orderByFilter): guarantee stable sort\r\n>\r\n> If the user-provided comparator fails to break a tie, fall back to the built-in comparator.\r\n>\r\n> Fixes #14881",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,113784444,feat($rootScope): Implement stopPropatagion for $broadcast events,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n$scope.$broadcast events cannot be cancelled and do not have a stopPropagation() function/method\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis change allows any scope to prevent it's children from receiving that\r\nevent by calling stopPropagation on the event object. Other listeners on the scope which called\r\nstopPropagation will continue to receive the event, as will siblings of that scope and any\r\nchildren of those siblings.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",open,false,2017-04-01T16:10:05.000Z,2017-06-29T14:24:52.000Z,,false,true,7,2,2,1,44,5,2,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,116388061,"Fixes to select and ngOptions - ""required"" validation and behavior with empty / unknown option","**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfixes\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n- (a) when the unknown option is selected and the select is ""required"", the required error is not set\r\n- (b) ngOptions: when the model is unmatched and an empty option exists, the empty option is always selected, even if the model is not null / undefined.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n- (a) the error is set\r\n- (b) the unknown option is selected if the model is not null / undefined\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nPossibly? For (a), the following situation is possible: The model is programatically set to a value that is no longer in select options, and the select is required. With this patch, the user cannot keep the unmatched value, because of the required error, which considers this value invalid (just realized this, so it's not in the commit message).\r\n\r\nFor (b), it's unlikely that anyone relied on the fact that the empty option is selected instead of the unmatched option - the fixd behavior was also present in regular select since the beginning.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-04-18T18:12:54.000Z,2017-04-21T18:38:58.000Z,2017-04-21T18:38:58.000Z,true,,6,7,5,4,363,112,5,1," Nice work @Narretz - LGTM",1," ",0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,116806417,feat(ngMocks): Describe unflushed http requests,"The current implementation of $httpBackend.verifyNoOutstandingRequest\r\ngives an integer number describing how many requests are unflushed.\r\n\r\nWhile it's superficially easy to solve test errors from that message\r\nby simply adding an additional $httpBackend.flush(), if a developer\r\nis truly not expecting the code to make further requests this is\r\nnot ideal.\r\n\r\nThis change explicitly prints out which additional requests remain\r\nunflushed in the error message, helping her determine if the code\r\nneeds changing, or if an additional flush is appropriate.\r\n\r\nBefore this change:\r\n\r\n    Unflushed requests: 1\r\n\r\nAfter this change:\r\n\r\n    Unflushed requests:\r\n      GET /some\r\n\r\nCloses #10596\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA feature improving the output of ngMocks ""Unflushed requests"" error message.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe error message includes the number of requests remaining unflushed.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThe error message now includes a brief description of which requests remain unflushed.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo - unless the error messages are considered public API.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-04-20T15:57:19.000Z,2017-04-21T17:21:55.000Z,2017-04-21T11:39:37.000Z,true,,5,2,1,3,22,3,2,0,,0,,0,,0,,0,,0,,0,,0,,1," ",1," LGTM",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,117685721,Feat: select api,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nselect directive behavior is unflexible\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nexposes methods to enable needed flexibility\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n",closed,false,2017-04-26T10:55:03.000Z,2017-04-27T19:35:46.000Z,2017-04-27T19:35:27.000Z,true,,5,3,5,3,371,38,4,0,,1," Excellent PR @Narretz ",0,,0,,0,,0,,0,,0,,2,"  Really nice  :100:\r\n(Loved the tests :smiley
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,117888580,docs(currency): Add sample of currency from scope,"docs(currency): Add sample of currency from scope\r\n\r\nAdded a sample line showing the use of a scope variable to set currency symbol.  E.g. for central i18n configuration.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nThis adds a docs update (example code).\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nShows currency symbols pulled from text strings.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nShows currency symbol pulled from scope.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [*] Tests for the changes have been added (for bug fixes / features)\r\n- [*] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",open,false,2017-04-27T08:50:16.000Z,2017-06-29T16:22:39.000Z,,false,true,1,1,2,1,5,1,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," Other than the failing tests it LGTM.\r\n(BTW, you can run the tests locally with `grunt test`
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,99684852,fix($compile): support transcluding multi-element directives,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nTranscluding multi-element directives (e.g. `foo-start`/`foo-end`) is not supported on elements with multi-slot transclusion (a `uterdir` error is thrown).\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nTranscluded nodes are put into a DocumentFragment, where they can be traversed via `.nextSibling`. This way, transcluding multi-element directives on elements with multi-slot transclusion works correctly.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15554.",open,false,2016-12-29T18:28:34.000Z,2017-06-29T14:32:10.000Z,,false,,0,2,2,1,51,5,2,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,118075462,perf(ngStyleDirective): use $watchCollection,"This re-commits https://github.com/angular/angular.js/commit/4c8d8ad5083d9dd17c0b8480339d5f95943f1b71 which was [reverted](https://github.com/angular/angular.js/commit/36fd167e1d6668ab497970f491a6d95344e97e41) (with [tests added](https://github.com/angular/angular.js/commit/da75d138b144d196fc2b397c7a86a74528c151a5)).  This is possible now because of 189461f9bf6fda18ddbd16c42f2e959cf939c3da, although note that change is currently causing #15905 so maybe we should hold off on merging this one for now?\r\n\r\nFYI @gdi2290",open,false,2017-04-28T03:50:37.000Z,2017-06-29T14:21:44.000Z,,false,true,5,1,0,2,14,2,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,118476910,fix($interval): change $interval ngMock service to handle second argu…,"…ment equivalent to zero\r\n\r\nEnable test interval calls with delay set to zero without infinite loop.\r\nIf a spec has `$interval.flush(ms)` and the code to test has\r\n`$interval(callback, 0)` then instead of running an infinite while loop\r\nit would move forward `ms` executing the $interval's callback.\r\n\r\nFixes #15952\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nhttps://github.com/angular/angular.js/issues/15952\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-05-02T02:47:18.000Z,2017-06-06T10:36:41.000Z,2017-06-06T10:36:41.000Z,false,,5,18,22,1,77,2,2,0,,0,,0,,0,,0,,0,,0,,0,,4,"    ",1," ",3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,10,"          ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,118263509,test($rootScope): add $watch/$watchCollection tests,"These are various cases that I felt were missing tests, mainly around constant/literal/one-time $watch/$watchCollection.",closed,false,2017-04-29T05:39:40.000Z,2017-05-10T04:54:16.000Z,2017-05-10T04:54:16.000Z,true,,3,9,8,3,544,219,1,0,,0,,0,,0,,1," ",1," Thanks @jbedard!",1," Tests look good (based on my limited understanding :D) but I would like the specs to be put into the relevant describes.",0,,1," ",1," Awesome (except for the indentation issues 😛)\r\n:100:",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,118685524,"Revert ""fix($parse): standardize one-time literal vs non-literal and interceptors""","Reverts 60394a9d91dad8932fa900af7c8529837f1d4557 to fix #15905 in 1.6. Currently plan is to NOT revert in 1.7.\r\n\r\nFixes #15905 ",closed,false,2017-05-03T03:23:21.000Z,2017-06-20T02:20:44.000Z,2017-06-20T02:20:44.000Z,true,,10,1,0,1,152,107,3,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM, but can you create an issue on the 1.7.0 milestone for documenting the breaking change on 17.x (I am not sure what exactly we have broken, but I understand we have broken some usecase
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,118836850,docs(guide/Templates): describe your change...,"The correct <script> tag in template\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-05-03T19:30:15.000Z,2017-05-04T11:21:18.000Z,2017-05-04T11:21:18.000Z,false,,4,2,1,2,1,1,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",1," (You also need to sign the CLA, before we can merge this
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,119131410,chore(*): update all Karma-related packages except Karma,"The updated karma-chrome-launcher adds support for ChromeHeadless &\r\nChromeCanaryHeadless launchers; test with:\r\n\r\n    karma start karma-jqlite.conf.js --browsers=ChromeCanaryHeadless\r\n\r\nThe updated karma-firefox-launcher disables multi-process which may increase\r\nstability on Jenkins.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nN/A\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-05-05T08:45:23.000Z,2017-05-06T15:50:46.000Z,2017-05-06T15:50:42.000Z,true,,1,1,0,1,124,71,2,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,119344262,fix(httpParamSerializerJQLike): Follow jQuery for `null` and `undefined`,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFollow jQuery when serializing `null` and `undefined`.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n```js\r\n$httpParamSerializerJQLike({items:['foo', 'bar', null, undefined]}) ==\r\n  'items%5B%5D=foo&items%5B%5D=bar';\r\n```\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n```js\r\n$httpParamSerializerJQLike({items:['foo', 'bar', null, undefined]}) ==\r\n  'items%5B%5D=foo&items%5B%5D=bar&items%5B%5D=&items%5B%5D=';\r\n```\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes, but does so to follow the implementation in jQuery.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nCloses: #15969",closed,false,2017-05-07T16:12:34.000Z,2017-05-07T18:25:50.000Z,2017-05-07T18:25:18.000Z,false,,1,1,0,1,8,2,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM, but I lean towards not backporting to 1.6. due to the breaking change (even if only to follow jQuery
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,119314593,test(*): run class-related tests everywhere; fix eval syntax,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-05-06T20:16:45.000Z,2017-05-09T13:08:39.000Z,2017-05-09T13:08:36.000Z,true,,6,1,0,1,27,30,5,0,,0,,0,,0,,0,,0,,0,,0,,1," My only concern is the following:\r\n\r\nIn case that our `supportTests` start returning false (so the tests are skipped), we might break the functionality but won't see any tests failures.\r\n\r\nI would feel more comfortable if we had some way to essentially verify the `supportTests`. E.g. if we know that Chrome should support all features, have tests that verify the `if (/chrome/.test(navigator.userAgent)) support.* === true`. (Open to better ideas too :smiley
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,120120857,docs(form): improve the docs for `FormController.$setValidity()`,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nBad docs for `FormController.$setValidity()`.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nBetter docs for `FormController.$setValidity()`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nFixes #15963.",closed,false,2017-05-11T14:29:18.000Z,2017-05-12T15:13:38.000Z,2017-05-12T15:13:18.000Z,false,,0,1,2,3,34,13,4,0,,0,,0,,0,,0,,1," Just a typo and a wording suggestion, otherwise LGTM",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,56122386,fix(form): make ngForm $pristine after nested control.$setPristine() (counter version),"When calling $setPristine on the nested form or control,\nform becomes $pristine of all the nested controls are pristine\n\nCloses #13715\n",open,false,2016-01-15T02:10:07.000Z,2017-06-29T14:49:04.000Z,,false,,4,1,3,2,320,6,4,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,120668313,fix($parse): always re-evaluate filters within literals when an input is an object,"Fixes #15964 \r\n\r\nThis changes the [compareObjectIdentity](https://github.com/angular/angular.js/blob/v1.6.4/src/ng/parse.js#L1785) flag from being per-expression to per-input.  This allows inputs to filters to not compare object entity, but other inputs such as `- x` or `{x: x}` to only compare object entity.  This also expands this `compareObjectIdentity = true` beyond just object literals.",closed,false,2017-05-15T18:47:36.000Z,2017-05-26T09:50:03.000Z,2017-05-25T04:42:22.000Z,true,,4,23,25,2,684,345,3,4,"    This looks pretty good; a few minor comments.\r\nMy main question is about the purity of `UnaryExpressions`.\r\nOtherwise happy to land this.",1," LGTM!\r\nThanks @jbedard - please squash and merge (assuming Travis is happy).",0,,0,,0,,0,,0,,0,,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,11,"           ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",1," LGTM!\r\n\r\nJust one minor comment.",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,121460181,test($log): run all $log tests in IE9 & non-IE9 logging mode,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTests update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nIE 9 mode (missing `console.log.apply`) has a separate more restricted describe block.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nAll tests tha define `console.log` properly are run in both modes: with `apply` and without one.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nIn IE 9 console methods don't inherit from Function.prototype and, hence, don't\r\nhave apply. Until recently IE 9 logging in AngularJS was restricted to the\r\nfirst 2 parameters but that changed as we could just reuse\r\nFunction.prototype.apply everywhere, creating one code path for all browsers.\r\nTherefore, we can now run all tests in modes where apply exists on logging\r\nmethods and where it doesn't.\r\n\r\nRef #15911\r\nRef b277e3ead7296ae27106fe7ac37696635c6bfda1",closed,false,2017-05-19T09:30:37.000Z,2017-05-24T08:14:33.000Z,2017-05-24T08:14:29.000Z,true,,0,1,0,1,126,116,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,121549040,chore(i18n): fix and update CLDR to v30.0.1,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix, i18n update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nLocale files based on CLDR 29 and broken `i18n/` scripts.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nLocale files based on CLDR 30.0.1 and working `i18n/` scripts.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15976.",closed,false,2017-05-19T17:39:57.000Z,2017-06-06T10:18:27.000Z,2017-06-06T10:13:27.000Z,false,,2,7,7,5,14615,21218,444,0,,0,,0,,0,,2,"  ",1," ",0,,0,,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,121795661,"docs($rootScope.Scope): clarify $watchGroup ""oldValues"" argument","This should help to prevent issues such as #8671, #12452, #16004.\r\n\r\nCloses #12643\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nunclear docs\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nhopefully clearer docs :)\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-05-22T14:50:14.000Z,2017-06-29T16:18:33.000Z,2017-06-29T16:18:33.000Z,true,,2,2,1,1,34,1,1,0,,0,,0,,0,,0,,0,,0,,0,,1," This does not apply to master any more (changed with #15854). Let's hold off on this, until we investigate the implications of that change.",1," LGTM",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,122223132,test(support): verify support tests results in all tested browsers,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nNew tests.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nIt's not tested whether browsers pass or fail specific support tests used to skip particular test blocks.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nAll browsers have verified support tests results.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-05-24T13:04:07.000Z,2017-05-25T14:14:35.000Z,2017-05-25T14:14:32.000Z,true,,3,6,12,1,122,25,4,0,,0,,0,,0,,0,,0,,0,,0,,1," ",1," ",1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,122409728,fix($sanitize): use appropriate inert document strategy for Firefox and Safari,Both Firefox and Safari are vulnerable to XSS if we use an inert document\r\ncreated via `document.implementation.createHTMLDocument()`.\r\n\r\nNow we check for those vulnerabilities and then use a DOMParser or XHR\r\nstrategy if needed.\r\n\r\nThanks to @cure53 for the heads up on this issue.\r\n,closed,false,2017-05-25T10:08:34.000Z,2017-06-05T20:04:31.000Z,2017-06-05T20:02:04.000Z,true,,5,8,7,1,89,16,2,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,122384055,perf($rootScope): do not mark $watchCollectionInterceptor as $stateful,"I think this was a mistake [from the start](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa?diff=unified#diff-44d3307b66bf51b52e110307fa57e196R518).  This interceptor doesn't actually store any state, it just reads the inner/complex state of its input.\r\n\r\nRemoving the `$stateful` flag will allow some expressions (those with `inputs` such as array/object literals) to avoid invoking `$watchCollectionInterceptor` and avoid creating the literals etc. on each digest.",open,false,2017-05-25T07:07:26.000Z,2017-06-29T14:20:29.000Z,,false,true,7,1,0,1,0,2,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," LGTM <sub>(I think)</sub
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,122751600,fix($parse): do not shallow-watch inputs when wrapped in an interceptor fn,"Fixes #15905 \r\n\r\nThis basically applies the same as b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f to interceptors.\r\n\r\nFor example normally when watching `[var]` the `var` only needs to be shallow-watched. But if that expression then gets wrapped in an interceptor such as `$parse('[var]', interceptor)` we must assume the `interceptor` is non-pure and might read state from within the `var` (just like filters/functions...).\r\n\r\nThis tries to preserve shallow watching of things behind operators such as `!` by distinguishing if an expression is pure due to an operator such as `!` (""absolute"") or pure only if no parent operation wants to deep watch it (""relative"").  This way when wrapped in an interceptor the ""absolute"" ones can still be shallow watched, while the ""relative"" ones that the interceptor has access to can no longer be shallow watched.\r\n\r\nThis still doesn't fully restore the 1.6.3 ng-class functionality because it still doesn't do a deep-watch for one-time bindings like 1.6.3 did. The one (famous last words...) remaining regression from 1.6.3 is demonstrated by the modified ng-class spec (objects-in-literals-with-interceptors-in-one-time bindings).  This is due to [this annoying condition](https://github.com/angular/angular.js/blob/b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f/src/ng/parse.js#L1946-L1948) which I really wish I could find a better method of doing...",closed,false,2017-05-27T07:40:42.000Z,2017-06-13T04:30:38.000Z,2017-06-13T04:30:38.000Z,true,,3,8,8,1,51,7,3,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,6,"      ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,2," I know that this PR *works* as it solves the specific issue, but I think it does so at a very high cost. What is currently at `$parse` are two things\r\n1. The lexer, tokenizer, expression generation and evaluation (this includes the two phase mechanism to only evaluate things once even when there is a change)\r\n2. One-time binding, unbinding on literals and all the other interceptor functionality, including watch delegates in its many forms\r\n\r\nSo far, the contract between these two parts was minimal, in theory it was possible to split these two into two different parts. This PR makes this *theoretical* separation hard. What would it take to get this separation back? ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,123342773,docs($compile): add more info about optional bindings,"This also deletes the incorrect info that a missing attribute\r\nin a non-optional binding will throw.\r\n\r\nCloses #15989\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nmissing / incorrect info\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\ninfo!\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n101% not\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-05-31T18:52:08.000Z,2017-06-05T18:23:13.000Z,2017-06-05T18:23:13.000Z,true,,0,7,17,4,47,14,2,0,,0,,0,,0,,3,"   ",0,,0,,0,,3,"   ",0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,122582256,fix($parse): respect the interceptor.$stateful flag,This actually depends on #16009 because that (unnecessary) `$stateful` flag was previously being ignored in the case of the failing test.,open,false,2017-05-26T06:49:09.000Z,2017-06-29T14:20:14.000Z,,false,true,4,8,8,3,225,57,5,0,,0,,0,,0,,0,,0,,0,,0,,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,4,"    ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,123828862,fix: bootstrap check with alternate anchor properties,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix: microsoft edge does not support the origin property on anchor elements, so bootstrapping fails\r\nfor edge extensions. this fix simply changes the bootstrap origin check to use supported\r\nanchor properties while having the same effect\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\ncloses #16030 \r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nn/a\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-06-03T04:23:25.000Z,2017-06-05T18:25:56.000Z,2017-06-05T18:25:56.000Z,false,,6,2,2,3,8,17,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,124140483,fix(Angular): deprecate angular.merge,"This function has problems with special object types but since it's not used in core,\r\nit is not worth implementing fixes for these cases.\r\nA general purpose library like lodash (provides `merge`) should be used instead.\r\n\r\nCloses #12653\r\nCloses #14941\r\nCloses #15180\r\nCloses #15992\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDeprecation\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nUnclear API support\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDeprecation / docs update\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~[ ] Tests for the changes have been added (for bug fixes / features)~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nNot sure if this should be marked fix or feat\r\n~If we deprecate only in 1.7.0, then the known issue section can still go in 1.6.x~\r\n",closed,false,2017-06-06T08:58:50.000Z,2017-06-12T14:11:48.000Z,2017-06-12T13:59:21.000Z,true,,0,4,4,2,14,0,1,0,,1," ",0,,0,,1," ",0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,124050945,chore(jenkins): do not publish to code.angularjs.org snapshot,While the firewall continues to block the update ports\r\nwe will not try to publish there.\r\n,closed,false,2017-06-05T20:17:16.000Z,2017-06-06T11:26:39.000Z,2017-06-06T11:26:06.000Z,true,,1,1,1,1,5,1,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,124256501,fix($resource): Check if timeoutDeferred is null inside $cancelRequest,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n#16016 \r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",open,false,2017-06-06T18:23:45.000Z,2017-06-29T16:17:16.000Z,,false,true,0,1,0,1,3,1,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," Can you please add some tests to make sure we don't accidentally break this in the future?",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,124714024,Fix broken link - point to list of Pluralsight courses on AngularJS,"AngularJS docs update: Currently, the link to Pluralsight at the bottom of the page https://docs.angularjs.org/guide/external-resources is broken. This will edit the link to a generic list of all AngularJs course on Pluralsight. This is an isolated UI change to a public facing document, therefore there are no breaking changes anticipated.\r\n",closed,false,2017-06-08T18:23:16.000Z,2017-06-12T18:27:11.000Z,2017-06-12T12:04:44.000Z,false,,6,2,2,2,1,1,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,124524823,test(ngMock): fix Firefox crashes on Travis,This test keeps causing Firefox 47 (currently used on Travis) to crash and fail the build. The test passes locally (on Firefox 53). Lowering the loop count from 1000 to 100 seems to fix the issue.\r\n(Note: The crach only affects the mocked implementation of `$interval` and does not happen locally.),closed,false,2017-06-07T21:43:11.000Z,2017-06-12T11:51:52.000Z,2017-06-12T11:46:29.000Z,false,,6,1,0,1,6,6,1,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,125005321,Improve readability of logging on Travis,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore: \r\n- it hides the dots for unit tests on Travis, which makes it easier to find the separate test tasks and results.\r\n- avoids building package for unit tests (makes the unit test job slightly faster)\r\n- re-arranges the grunt task list to make it easier to read\r\n\r\n",closed,false,2017-06-10T21:39:33.000Z,2017-06-13T09:40:26.000Z,2017-06-13T09:40:10.000Z,true,,1,3,2,3,95,20,6,1," ",1," ",0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,124794843,test($parse): add one-time/interceptor tests,"I realized that https://github.com/angular/angular.js/commit/189461f9bf6fda18ddbd16c42f2e959cf939c3da changed this a little - previously the second test failed for two reasons\r\n1. one-time literals [did not use .inputs](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) unlike the normal [one-time delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1856), so the `identity` interceptor would throw an infdig because the literal recreated each digest was being watched\r\n2. one-time literals with interceptors [only check `isDefined`](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1933) to determine when the one time is ""done"" which is unlike [the one-time watch delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) that checks all the values in the literal, so the interceptor thought the ""one-time"" was done right away for literals\r\n\r\nI think both of these changes are correct and want to make sure we don't revert them. This should probably only go into 1.7 since this change will [probably be reverted](https://github.com/angular/angular.js/pull/15958) in 1.6.",closed,false,2017-06-09T05:43:29.000Z,2017-06-13T05:07:02.000Z,2017-06-13T05:07:01.000Z,true,,0,3,2,1,26,0,1,1," ",1," except for the typo, this LGTM",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,125837275,docs(tutorial/4 - Directory and File Organization): describe your cha…,"…nge...\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update - changed file extension\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-06-15T14:39:17.000Z,2017-06-16T10:20:08.000Z,2017-06-16T10:20:02.000Z,false,,0,1,1,1,1,1,1,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,126682544,fix($timeout/$interval): do not trigger a digest when cancelling a $timeout/$interval,Previously `.catch(noop)` was used on the rejected timeout/interval to prevent an unhandled rejection error. However this would schedule a deferred task to run the `noop`. If the cancelling was outside a digest this could cause a new digest such as with the ng-model `debounce` option.\r\n\r\nFixes #16057,closed,false,2017-06-21T05:35:48.000Z,2017-07-03T09:04:18.000Z,2017-07-03T09:04:18.000Z,true,,3,8,9,1,48,8,8,0,,0,,0,,0,,3,"   ",0,,1," ",0,,1," ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,3,"   ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,126453657,"benchmarks - remove no longer applicable, add $watchCollection","Removing\r\n* cases accessing `constructor` that previously had extra ""security"" applied\r\n* the `bmPeWatchLiteral` directive that was making literals `$watch`-able, now they can be watched normally\r\n\r\nAdding\r\n* some `$watchCollection` tests",closed,false,2017-06-20T06:08:28.000Z,2017-06-28T04:42:29.000Z,2017-06-28T04:42:29.000Z,true,,0,1,1,2,52,46,2,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," :tada: LGTM 🎉\r\n<sub>(with the typo fixed)</sub
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,127727360,perf(ngOptions): prevent initial options repainting,"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nSee #15812\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n\r\n",closed,false,2017-06-27T15:41:53.000Z,2017-06-29T08:51:10.000Z,2017-06-29T08:51:10.000Z,true,,2,1,0,2,66,7,2,0,,1," LGTM - given that all the tests continue to pass
460078,angular,angular.js,JavaScript,2010-01-06T00:34:37.000Z,2017-07-03T09:18:56.000Z,128130319,"fix($http) No error for json-like repsonses without ""application/json"" content-type","Don't throw error if http response has json-like data but content-type is not ""application/json"". Instead return data unprocessed.\r\n\r\nFixes https://github.com/angular/angular.js/issues/16027\r\nThis is not a breaking change.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)",open,false,2017-06-29T11:38:17.000Z,2017-06-29T15:32:51.000Z,,false,true,0,3,6,3,45,1,2,0,,0,,0,,0,,0,,0,,0,,0,,2,"  ",0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,0,,1," ",0,,0,,0,
